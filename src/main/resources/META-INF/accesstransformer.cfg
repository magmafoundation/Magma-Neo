public net.minecraft.advancements.CriteriaTriggers register(Ljava/lang/String;Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; # register
default net.minecraft.client.KeyMapping isDown # isDown
public-f net.minecraft.client.Options keyMappings # keyMappings
public net.minecraft.client.Options$FieldAccess
public net.minecraft.client.OptionInstance caption
public net.minecraft.client.OptionInstance toString
public net.minecraft.client.OptionInstance$ValueSet
public net.minecraft.client.gui.Gui$HeartType
protected net.minecraft.client.gui.components.AbstractButton SPRITES
protected net.minecraft.client.gui.components.AbstractSelectionList$Entry list # list
protected net.minecraft.client.gui.components.AbstractSliderButton getSprite()Lnet/minecraft/resources/ResourceLocation; # getSprite
protected net.minecraft.client.gui.components.AbstractSliderButton getHandleSprite()Lnet/minecraft/resources/ResourceLocation; # getHandleSprite
public net.minecraft.client.gui.components.AbstractWidget renderScrollingString(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;IIIII)V
public net.minecraft.client.gui.components.AbstractWidget renderScrollingString(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;IIIIII)V
public net.minecraft.client.gui.screens.MenuScreens$ScreenConstructor
public net.minecraft.client.gui.screens.Screen renderables # renderables
public net.minecraft.client.model.geom.LayerDefinitions OUTER_ARMOR_DEFORMATION # OUTER_ARMOR_DEFORMATION
public net.minecraft.client.model.geom.LayerDefinitions INNER_ARMOR_DEFORMATION # INNER_ARMOR_DEFORMATION
public net.minecraft.client.multiplayer.ClientPacketListener commands # commands
public net.minecraft.client.multiplayer.SessionSearchTrees CREATIVE_NAMES
public net.minecraft.client.multiplayer.SessionSearchTrees CREATIVE_TAGS
public net.minecraft.client.multiplayer.SessionSearchTrees$Key
public net.minecraft.client.multiplayer.SessionSearchTrees$Key <init>()V
public net.minecraft.client.particle.FireworkParticles$Starter createParticle(DDDDDDLit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;ZZ)V # createParticle
public net.minecraft.client.particle.FireworkParticles$Starter createParticleBall(DILit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;ZZ)V # createParticleBall
public net.minecraft.client.particle.FireworkParticles$Starter createParticleShape(D[[DLit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;ZZZ)V # createParticleShape
public net.minecraft.client.particle.FireworkParticles$Starter createParticleBurst(Lit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;ZZ)V # createParticleBurst
public net.minecraft.client.particle.ParticleEngine register(Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V # register
public net.minecraft.client.particle.ParticleEngine register(Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V # register
public net.minecraft.client.particle.ParticleEngine register(Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider$Sprite;)V # register
public net.minecraft.client.particle.ParticleEngine$SpriteParticleRegistration
public net.minecraft.client.player.LocalPlayer getPermissionLevel()I # getPermissionLevel
public net.minecraft.client.renderer.GameRenderer loadEffect(Lnet/minecraft/resources/ResourceLocation;)V # loadEffect
public net.minecraft.client.renderer.LevelRenderer shouldShowEntityOutlines()Z # shouldShowEntityOutlines
#group RenderType
public net.minecraft.client.renderer.RenderType *
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;
public net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; # create
public net.minecraft.client.renderer.RenderType$OutlineProperty
public net.minecraft.client.renderer.RenderType$CompositeState
public net.minecraft.client.renderer.RenderStateShard *
protected-f net.minecraft.client.renderer.RenderStateShard$TextureStateShard blur # blur
protected-f net.minecraft.client.renderer.RenderStateShard$TextureStateShard mipmap # mipmap
public net.minecraft.client.renderer.RenderStateShard setupGlintTexturing(F)V
public net.minecraft.client.renderer.RenderStateShard$BooleanStateShard
public net.minecraft.client.renderer.RenderStateShard$ColorLogicStateShard
public net.minecraft.client.renderer.RenderStateShard$CullStateShard
public net.minecraft.client.renderer.RenderStateShard$DepthTestStateShard
public net.minecraft.client.renderer.RenderStateShard$EmptyTextureStateShard
public net.minecraft.client.renderer.RenderStateShard$LayeringStateShard
public net.minecraft.client.renderer.RenderStateShard$LightmapStateShard
public net.minecraft.client.renderer.RenderStateShard$LineStateShard
public net.minecraft.client.renderer.RenderStateShard$MultiTextureStateShard
public net.minecraft.client.renderer.RenderStateShard$OffsetTexturingStateShard
public net.minecraft.client.renderer.RenderStateShard$OutputStateShard
public net.minecraft.client.renderer.RenderStateShard$OverlayStateShard
public net.minecraft.client.renderer.RenderStateShard$ShaderStateShard
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard
public net.minecraft.client.renderer.RenderStateShard$TexturingStateShard
public net.minecraft.client.renderer.RenderStateShard$TransparencyStateShard
public net.minecraft.client.renderer.RenderStateShard$WriteMaskStateShard
#endgroup
default net.minecraft.client.renderer.chunk.RenderChunk wrapped
public net.minecraft.client.renderer.block.model.BlockElement uvsByFace(Lnet/minecraft/core/Direction;)[F # uvsByFace
public net.minecraft.client.renderer.block.model.BlockElement$Deserializer
public net.minecraft.client.renderer.block.model.BlockElement$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.BlockElementFace$Deserializer
public net.minecraft.client.renderer.block.model.BlockElementFace$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.BlockFaceUV$Deserializer
public net.minecraft.client.renderer.block.model.BlockFaceUV$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.BlockModel textureMap # textureMap
public net.minecraft.client.renderer.block.model.BlockModel parent # parent
public net.minecraft.client.renderer.block.model.BlockModel hasAmbientOcclusion # hasAmbientOcclusion
public net.minecraft.client.renderer.block.model.BlockModel bakeFace(Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/renderer/block/model/BakedQuad; # bakeFace
public net.minecraft.client.renderer.block.model.ItemModelGenerator processFrames(ILjava/lang/String;Lnet/minecraft/client/renderer/texture/SpriteContents;)Ljava/util/List; # processFrames
public net.minecraft.client.renderer.block.model.ItemOverride$Deserializer
public net.minecraft.client.renderer.block.model.ItemOverride$Deserializer <init>()V # constructor
protected net.minecraft.client.renderer.block.model.ItemOverrides <init>()V # constructor
public net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer DEFAULT_ROTATION # DEFAULT_ROTATION
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer DEFAULT_TRANSLATION # DEFAULT_TRANSLATION
public net.minecraft.client.renderer.block.model.ItemTransform$Deserializer DEFAULT_SCALE # DEFAULT_SCALE
public net.minecraft.client.renderer.block.model.ItemTransforms$Deserializer
public net.minecraft.client.renderer.block.model.ItemTransforms$Deserializer <init>()V # constructor
public net.minecraft.client.renderer.blockentity.BlockEntityRenderers register(Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V # register
public net.minecraft.client.renderer.blockentity.SkullBlockRenderer SKIN_BY_TYPE # SKIN_BY_TYPE
public net.minecraft.client.renderer.entity.EntityRenderers register(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V # register
public net.minecraft.client.renderer.entity.ItemRenderer renderQuadList(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V # renderQuadList
public net.minecraft.client.renderer.entity.ItemRenderer renderModelLists(Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V # renderModelLists
public net.minecraft.client.renderer.entity.LivingEntityRenderer addLayer(Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z # addLayer
public net.minecraft.client.renderer.texture.SpriteContents byMipLevel # byMipLevel
default net.minecraft.client.renderer.texture.SpriteContents animatedTexture # animatedTexture
public net.minecraft.client.renderer.texture.atlas.sources.PalettedPermutations <init>(Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)V # constructor
public net.minecraft.client.renderer.texture.atlas.sources.PalettedPermutations$PalettedSpriteSupplier
public net.minecraft.client.renderer.texture.atlas.sources.PalettedPermutations$PalettedSpriteSupplier <init>(Lnet/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage;Ljava/util/function/Supplier;Lnet/minecraft/resources/ResourceLocation;)V # constructor
public net.minecraft.client.renderer.texture.atlas.sources.Unstitcher$Region
public net.minecraft.client.renderer.texture.atlas.sources.Unstitcher$Region <init>(Lnet/minecraft/resources/ResourceLocation;DDDD)V # constructor
public net.minecraft.client.renderer.texture.atlas.sources.Unstitcher$RegionInstance
public net.minecraft.client.renderer.texture.atlas.sources.Unstitcher$RegionInstance <init>(Lnet/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage;Lnet/minecraft/client/renderer/texture/atlas/sources/Unstitcher$Region;DD)V # constructor
public net.minecraft.client.resources.ClientPackSource createVanillaPackSource(Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResources; # createVanillaPackSource
protected net.minecraft.client.resources.TextureAtlasHolder textureAtlas # textureAtlas
public net.minecraft.client.resources.model.SimpleBakedModel$Builder <init>(ZZZLnet/minecraft/client/renderer/block/model/ItemTransforms;Lnet/minecraft/client/renderer/block/model/ItemOverrides;)V # constructor
public net.minecraft.client.sounds.SoundEngine soundManager # soundManager
public net.minecraft.commands.CommandSourceStack source # source
public net.minecraft.commands.arguments.selector.EntitySelectorParser finalizePredicates()V # finalizePredicates
public net.minecraft.commands.arguments.selector.EntitySelectorParser parseOptions()V # parseOptions
public net.minecraft.commands.arguments.selector.options.EntitySelectorOptions register(Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V # register
protected net.minecraft.core.IdMapper nextId # nextId
protected net.minecraft.core.IdMapper tToId # tToId - internal map
protected net.minecraft.core.IdMapper idToT # idToT - internal index list
public net.minecraft.core.particles.SimpleParticleType <init>(Z)V # constructor
public net.minecraft.data.models.ItemModelGenerators GENERATED_TRIM_MODELS
public net.minecraft.data.models.ItemModelGenerators$TrimModelData
public net.minecraft.data.models.ItemModelGenerators$TrimModelData <init>(Ljava/lang/String;FLjava/util/Map;)V
protected net.minecraft.data.loot.BlockLootSubProvider createSilkTouchOnlyTable(Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; # createSilkTouchOnlyTable
protected net.minecraft.data.loot.BlockLootSubProvider createPotFlowerItemTable(Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; # createPotFlowerItemTable
protected net.minecraft.data.loot.BlockLootSubProvider createSelfDropDispatchTable(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; # createSelfDropDispatchTable
protected net.minecraft.data.loot.EntityLootSubProvider canHaveLootTable(Lnet/minecraft/world/entity/EntityType;)Z # canHaveLootTable
protected net.minecraft.data.recipes.RecipeProvider recipePathProvider # recipePathProvider
protected net.minecraft.data.recipes.RecipeProvider advancementPathProvider # advancementPathProvider
protected net.minecraft.data.recipes.RecipeProvider insideOf(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/Criterion; # insideOf
protected net.minecraft.data.recipes.RecipeProvider inventoryTrigger([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/Criterion; # inventoryTrigger
protected net.minecraft.data.recipes.RecipeProvider has(Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/Criterion; # has
protected net.minecraft.data.recipes.RecipeProvider getBaseBlock(Lnet/minecraft/data/BlockFamily;Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; # getBaseBlock
protected net.minecraft.data.recipes.RecipeProvider buttonBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # buttonBuilder
protected net.minecraft.data.recipes.RecipeProvider fenceBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # fenceBuilder
protected net.minecraft.data.recipes.RecipeProvider fenceGateBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # fenceGateBuilder
protected net.minecraft.data.recipes.RecipeProvider signBuilder(Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # signBuilder
protected net.minecraft.data.recipes.RecipeProvider smeltingResultFromBase(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V # smeltingResultFromBase
protected net.minecraft.data.recipes.RecipeProvider cutBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; # cutBuilder
protected net.minecraft.data.recipes.RecipeProvider oreCooking(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe$Factory;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;Ljava/lang/String;)V # oreCooking
protected net.minecraft.data.recipes.RecipeProvider wallBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # wallBuilder
protected net.minecraft.data.recipes.RecipeProvider polishedBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # polishedBuilder
protected net.minecraft.data.recipes.RecipeProvider pressurePlateBuilder(Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; # pressurePlateBuilder
protected net.minecraft.data.recipes.RecipeProvider nineBlockStorageRecipes(Lnet/minecraft/data/recipes/RecipeOutput;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V # nineBlockStorageRecipes
protected net.minecraft.data.recipes.RecipeProvider simpleCookingRecipe(Lnet/minecraft/data/recipes/RecipeOutput;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe$Factory;ILnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;F)V # simpleCookingRecipe
protected net.minecraft.data.recipes.RecipeProvider inventoryTrigger([Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/Criterion; # inventoryTrigger
public net.minecraft.data.recipes.packs.VanillaRecipeProvider COAL_SMELTABLES # COAL_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider IRON_SMELTABLES # IRON_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider COPPER_SMELTABLES # COPPER_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider DIAMOND_SMELTABLES # DIAMOND_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider GOLD_SMELTABLES # GOLD_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider EMERALD_SMELTABLES # EMERALD_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider REDSTONE_SMELTABLES # REDSTONE_SMELTABLES
public net.minecraft.data.recipes.packs.VanillaRecipeProvider LAPIS_SMELTABLES # LAPIS_SMELTABLES
public-f net.minecraft.data.registries.RegistriesDatapackGenerator getName()Ljava/lang/String; # getName
public net.minecraft.data.tags.IntrinsicHolderTagsProvider$IntrinsicTagAppender
protected net.minecraft.data.tags.TagsProvider builders # builders
public-f net.minecraft.data.tags.TagsProvider getName()Ljava/lang/String; # getName
public net.minecraft.data.tags.TagsProvider$TagAppender
public net.minecraft.gametest.framework.GameTestHelper testInfo # testInfo
public net.minecraft.gametest.framework.GameTestInfo sequences # sequences
public net.minecraft.gametest.framework.GameTestSequence <init>(Lnet/minecraft/gametest/framework/GameTestInfo;)V # <init>
protected net.minecraft.resources.RegistryOps <init>(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;)V # constructor
public net.minecraft.resources.ResourceLocation validNamespaceChar(C)Z # validNamespaceChar
protected net.minecraft.server.MinecraftServer nextTickTimeNanos # nextTickTimeNanos
public net.minecraft.server.MinecraftServer$ReloadableResources
public net.minecraft.server.MinecraftServer$ReloadableResources <init>(Lnet/minecraft/server/packs/resources/CloseableResourceManager;Lnet/minecraft/server/ReloadableServerResources;)V
public net.minecraft.server.level.ChunkMap getVisibleChunkIfPresent(J)Lnet/minecraft/server/level/ChunkHolder;
public net.minecraft.server.level.ServerChunkCache level # level
public net.minecraft.server.level.ServerLevel getEntities()Lnet/minecraft/world/level/entity/LevelEntityGetter; # getEntities
public net.minecraft.server.packs.FilePackResources <init>(Lnet/minecraft/server/packs/PackLocationInfo;Lnet/minecraft/server/packs/FilePackResources$SharedZipFileAccess;Ljava/lang/String;)V # constructor
public net.minecraft.server.packs.FilePackResources$SharedZipFileAccess
public net.minecraft.server.packs.FilePackResources$SharedZipFileAccess <init>(Ljava/io/File;)V # constructor
public net.minecraft.server.packs.OverlayMetadataSection$OverlayEntry CODEC # CODEC
public net.minecraft.server.packs.repository.BuiltInPackSource fixedResources(Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier; # fixedResources
public net.minecraft.server.packs.repository.Pack getDeclaredPackVersions(Ljava/lang/String;Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;)Lnet/minecraft/util/InclusiveRange; # getDeclaredPackVersions
public net.minecraft.server.packs.repository.PackRepository rebuildSelected(Ljava/util/Collection;)Ljava/util/List; # rebuildSelected
public net.minecraft.server.packs.resources.FallbackResourceManager fallbacks # fallbacks
public net.minecraft.util.datafix.fixes.StructuresBecomeConfiguredFix$Conversion
public net.minecraft.util.datafix.fixes.StructuresBecomeConfiguredFix$Conversion <init>(Ljava/util/Map;Ljava/lang/String;)V
public net.minecraft.util.thread.BlockableEventLoop submitAsync(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; # submitAsync
public net.minecraft.world.damagesource.CombatTracker INTENTIONAL_GAME_DESIGN_STYLE # INTENTIONAL_GAME_DESIGN_STYLE
public net.minecraft.world.damagesource.CombatTracker getMostSignificantFall()Lnet/minecraft/world/damagesource/CombatEntry; # getMostSignificantFall
public net.minecraft.world.damagesource.CombatTracker getFallMessage(Lnet/minecraft/world/damagesource/CombatEntry;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/Component; # getFallMessage
#group public net.minecraft.world.damagesource.DamageSource *() #All methods public, most are already
public net.minecraft.world.damagesource.DamageSource <init>(Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;)V # constructor
#endgroup
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; # source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; # source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; # source
public net.minecraft.world.damagesource.DamageSources damageTypes # damageTypes
protected net.minecraft.world.entity.Entity ENTITY_COUNTER # ENTITY_COUNTER
public net.minecraft.world.entity.Entity getEncodeId()Ljava/lang/String; # getEncodeId
public net.minecraft.world.entity.ExperienceOrb value # value
public net.minecraft.world.entity.LivingEntity getCurrentSwingDuration()I # getCurrentSwingDuration
public net.minecraft.world.entity.LivingEntity getHitbox()Lnet/minecraft/world/phys/AABB; # getHitbox
public net.minecraft.world.entity.Mob goalSelector # goalSelector
public net.minecraft.world.entity.Mob targetSelector # targetSelector
public net.minecraft.world.entity.ai.sensing.SensorType <init>(Ljava/util/function/Supplier;)V # constructor
protected net.minecraft.world.entity.item.PrimedTnt explode()V # explode - make it easier to extend TNTEntity with custom explosion logic
protected net.minecraft.world.entity.monster.AbstractSkeleton getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
protected net.minecraft.world.entity.monster.Skeleton getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
protected net.minecraft.world.entity.monster.Stray getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
protected net.minecraft.world.entity.monster.WitherSkeleton getStepSound()Lnet/minecraft/sounds/SoundEvent; # getStepSound - make AbstractSkeletonEntity implementable
public net.minecraft.world.entity.npc.VillagerType <init>(Ljava/lang/String;)V # constructor
public net.minecraft.world.entity.player.Player closeContainer()V # closeContainer
protected net.minecraft.world.entity.projectile.Projectile <init>(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V # constructor
public net.minecraft.world.entity.raid.Raid$RaiderType
public net.minecraft.world.entity.schedule.Activity <init>(Ljava/lang/String;)V # constructor
protected net.minecraft.world.entity.vehicle.VehicleEntity getDropItem()Lnet/minecraft/world/item/Item; # getDropItem - make VehicleEntity implementable
protected net.minecraft.world.entity.monster.Zombie conversionTime
public net.minecraft.world.inventory.AnvilMenu repairItemCountCost # repairItemCountCost
public net.minecraft.world.inventory.MenuType <init>(Lnet/minecraft/world/inventory/MenuType$MenuSupplier;Lnet/minecraft/world/flag/FeatureFlagSet;)V # constructor
public net.minecraft.world.inventory.MenuType$MenuSupplier
public net.minecraft.world.item.CreativeModeTab$TabVisibility
public net.minecraft.world.item.CreativeModeTabs COLORED_BLOCKS # COLORED_BLOCKS
public net.minecraft.world.item.CreativeModeTabs SPAWN_EGGS # SPAWN_EGGS
public net.minecraft.world.item.CreativeModeTabs SEARCH # SEARCH
public net.minecraft.world.item.CreativeModeTabs NATURAL_BLOCKS # NATURAL_BLOCKS
public net.minecraft.world.item.CreativeModeTabs BUILDING_BLOCKS # BUILDING_BLOCKS
public net.minecraft.world.item.CreativeModeTabs FUNCTIONAL_BLOCKS # FUNCTIONAL_BLOCKS
public net.minecraft.world.item.CreativeModeTabs COMBAT # COMBAT
public net.minecraft.world.item.CreativeModeTabs OP_BLOCKS # OP_BLOCKS
public net.minecraft.world.item.CreativeModeTabs FOOD_AND_DRINKS # FOOD_AND_DRINKS
public net.minecraft.world.item.CreativeModeTabs TOOLS_AND_UTILITIES # TOOLS_AND_UTILITIES
public net.minecraft.world.item.CreativeModeTabs HOTBAR # HOTBAR
public net.minecraft.world.item.CreativeModeTabs INGREDIENTS # INGREDIENTS
public net.minecraft.world.item.CreativeModeTabs REDSTONE_BLOCKS # REDSTONE_BLOCKS
public net.minecraft.world.item.CreativeModeTabs INVENTORY # INVENTORY
#group public net.minecraft.world.item.Item <init>
public net.minecraft.world.item.DiggerItem <init>(Lnet/minecraft/world/item/Tier;Lnet/minecraft/tags/TagKey;Lnet/minecraft/world/item/Item$Properties;)V # constructor
#endgroup
private-f net.minecraft.world.item.Item components
public net.minecraft.world.item.BucketItem content
public net.minecraft.world.item.SwordItem createToolProperties()Lnet/minecraft/world/item/component/Tool;
public net.minecraft.world.item.Item getPlayerPOVHitResult(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; # getPlayerPOVHitResult
public net.minecraft.world.item.ItemStack addToTooltip(Lnet/minecraft/core/component/DataComponentType;Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/function/Consumer;Lnet/minecraft/world/item/TooltipFlag;)V
public net.minecraft.world.item.ItemStackLinkedSet TYPE_AND_TAG # TYPE_AND_TAG
public net.minecraft.world.item.context.BlockPlaceContext <init>(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/BlockHitResult;)V # constructor
public net.minecraft.world.item.context.UseOnContext <init>(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/BlockHitResult;)V # constructor
public net.minecraft.world.item.crafting.Ingredient fromValues(Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; # fromValues
public net.minecraft.world.item.crafting.Ingredient$ItemValue
public net.minecraft.world.item.crafting.Ingredient$ItemValue <init>(Lnet/minecraft/world/item/ItemStack;)V # constructor
public net.minecraft.world.item.crafting.Ingredient$TagValue
public net.minecraft.world.item.crafting.Ingredient$TagValue <init>(Lnet/minecraft/tags/TagKey;)V # constructor
public net.minecraft.world.item.crafting.Ingredient$Value
public net.minecraft.world.item.crafting.ShapedRecipe pattern # pattern
public net.minecraft.world.level.GameRules register(Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; # register
public net.minecraft.world.level.GameRules$BooleanValue create(Z)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.GameRules$BooleanValue create(ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.GameRules$IntegerValue create(ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.GameRules$IntegerValue create(I)Lnet/minecraft/world/level/GameRules$Type; # create
public net.minecraft.world.level.Level oRainLevel # oRainLevel
public net.minecraft.world.level.Level rainLevel # rainLevel
public net.minecraft.world.level.Level oThunderLevel # oThunderLevel
public net.minecraft.world.level.Level thunderLevel # thunderLevel
public net.minecraft.world.level.biome.Biome$ClimateSettings
public net.minecraft.world.level.biome.Biome$ClimateSettings <init>(ZFLnet/minecraft/world/level/biome/Biome$TemperatureModifier;F)V
public net.minecraft.world.level.biome.BiomeGenerationSettings <init>(Ljava/util/Map;Ljava/util/List;)V # constructor
protected net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder features # features
protected net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder carvers # carvers
protected net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder addFeatureStepsUpTo(I)V # addFeatureStepsUpTo
#group protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder *
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder fogColor # fogColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder waterColor # waterColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder waterFogColor # waterFogColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder skyColor # skyColor
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder foliageColorOverride # foliageColorOverride
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder grassColorOverride # grassColorOverride
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder grassColorModifier # grassColorModifier
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientParticle # ambientParticle
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientLoopSoundEvent # ambientLoopSoundEvent
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientMoodSettings # ambientMoodSettings
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder ambientAdditionsSettings # ambientAdditionsSettings
protected net.minecraft.world.level.biome.BiomeSpecialEffects$Builder backgroundMusic # backgroundMusic
#endgroup
protected net.minecraft.world.level.biome.MobSpawnSettings$Builder spawners # spawners
protected net.minecraft.world.level.biome.MobSpawnSettings$Builder mobSpawnCosts # mobSpawnCosts
protected net.minecraft.world.level.biome.MobSpawnSettings$Builder creatureGenerationProbability # creatureGenerationProbability
#group public net.minecraft.world.level.block.Block <init>
public net.minecraft.world.level.block.AttachedStemBlock <init>(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.AzaleaBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BarrierBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralFanBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralPlantBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralPlantTypeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BaseCoralWallFanBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BigDripleafBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BigDripleafStemBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.BlastFurnaceBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ButtonBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;ILnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CactusBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CakeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CandleCakeBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CartographyTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CarvedPumpkinBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ChestBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Ljava/util/function/Supplier;)V # constructor
public net.minecraft.world.level.block.ChorusFlowerBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ChorusPlantBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CoralFanBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CoralPlantBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CoralWallFanBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CraftingTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.CropBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DeadBushBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DecoratedPotBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DirtPathBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DispenserBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.DoorBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EnchantingTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EndGatewayBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EndPortalBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EndRodBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EnderChestBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.EquipableCarvedPumpkinBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FarmBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FletchingTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FungusBlock <init>(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.FurnaceBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.GrindstoneBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.HalfTransparentBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.HangingRootsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.IronBarsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.JigsawBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.JukeboxBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.KelpBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.KelpPlantBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LadderBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LecternBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LeverBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LiquidBlock <init>(Lnet/minecraft/world/level/material/FlowingFluid;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.LoomBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.MangroveRootsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.NetherWartBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.NyliumBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PinkPetalsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PipeBlock <init>(FLnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PlayerHeadBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PlayerWallHeadBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PoweredRailBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PressurePlateBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.PumpkinBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RailBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RedstoneTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RedstoneWallTorchBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RepeaterBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RodBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.RootsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SaplingBlock <init>(Lnet/minecraft/world/level/block/grower/TreeGrower;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.ScaffoldingBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SeaPickleBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SeagrassBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SkullBlock <init>(Lnet/minecraft/world/level/block/SkullBlock$Type;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SmithingTableBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SmokerBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SnowLayerBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SnowyDirtBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SpawnerBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SpongeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StairBlock <init>(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StemBlock <init>(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StructureBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.StructureVoidBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.SugarCaneBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.TallGrassBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.TorchBlock <init>(Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.TransparentBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.TrapDoorBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WallSkullBlock <init>(Lnet/minecraft/world/level/block/SkullBlock$Type;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WallTorchBlock <init>(Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WaterlilyBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WaterloggedTransparentBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WeatheringCopperDoorBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WeatheringCopperGrateBlock <init>(Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WeatheringCopperTrapDoorBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WeightedPressurePlateBlock <init>(ILnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WetSpongeBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WitherSkullBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WitherWallSkullBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
public net.minecraft.world.level.block.WoolCarpetBlock <init>(Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # constructor
#endgroup
public net.minecraft.world.level.block.Block popExperience(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V # popExperience
public net.minecraft.world.level.block.Blocks always(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; # always
public net.minecraft.world.level.block.Blocks never(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; # never
public net.minecraft.world.level.block.Blocks ocelotOrParrot(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; # ocelotOrParro
public net.minecraft.world.level.block.CropBlock hasSufficientLight(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z # hasSufficientLight
public net.minecraft.world.level.block.FireBlock getBurnOdds(Lnet/minecraft/world/level/block/state/BlockState;)I # getBurnOdds
public net.minecraft.world.level.block.FireBlock getIgniteOdds(Lnet/minecraft/world/level/block/state/BlockState;)I # getIgniteOdds
public net.minecraft.world.level.block.LiquidBlock fluid
public net.minecraft.world.level.block.PointedDripstoneBlock LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK # LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
public net.minecraft.world.level.block.PointedDripstoneBlock WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK # WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
public net.minecraft.world.level.block.entity.BlockEntityType$BlockEntitySupplier
public net.minecraft.world.level.block.entity.HopperBlockEntity setCooldown(I)V # setCooldown
public net.minecraft.world.level.block.entity.HopperBlockEntity isOnCustomCooldown()Z # isOnCustomCooldown
public net.minecraft.world.level.block.state.BlockBehaviour propertiesCodec()Lcom/mojang/serialization/codecs/RecordCodecBuilder;
public net.minecraft.world.level.block.state.properties.BlockSetType register(Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; # register
public net.minecraft.world.level.block.state.properties.WoodType register(Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; # register
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer barrierNoise # barrierNoise
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer lavaNoise # lavaNoise
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer aquiferCache # aquiferCache
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer aquiferLocationCache # aquiferLocationCache
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer shouldScheduleFluidUpdate # shouldScheduleFluidUpdate
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer minGridX # minGridX
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer minGridY # minGridY
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer minGridZ # minGridZ
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridSizeX # gridSizeX
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridSizeZ # gridSizeZ
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer similarity(II)D # similarity
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer getIndex(III)I # getIndex
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridX(I)I # gridX
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridY(I)I # gridY
protected net.minecraft.world.level.levelgen.Aquifer$NoiseBasedAquifer gridZ(I)I # gridZ
protected net.minecraft.world.level.levelgen.Beardifier pieceIterator # pieceIterator
protected net.minecraft.world.level.levelgen.Beardifier junctionIterator # junctionIterator
protected net.minecraft.world.level.levelgen.Beardifier getBuryContribution(DDD)D # getBuryContribution
protected net.minecraft.world.level.levelgen.Beardifier getBeardContribution(IIII)D # getBeardContribution
private-f net.minecraft.world.level.levelgen.DebugLevelSource ALL_BLOCKS # ALL_BLOCKS
private-f net.minecraft.world.level.levelgen.DebugLevelSource GRID_WIDTH # GRID_WIDTH
private-f net.minecraft.world.level.levelgen.DebugLevelSource GRID_HEIGHT # GRID_HEIGHT
public-f net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator
protected net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator iterateNoiseColumn(Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; # iterateNoiseColumn
#group public net.minecraft.world.level.levelgen.NoiseGeneratorSettings *()
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings caves(Lnet/minecraft/data/worldgen/BootstrapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # caves
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings end(Lnet/minecraft/data/worldgen/BootstrapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # end
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings overworld(Lnet/minecraft/data/worldgen/BootstrapContext;ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # overworld
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings floatingIslands(Lnet/minecraft/data/worldgen/BootstrapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # floatingIslands
public net.minecraft.world.level.levelgen.NoiseGeneratorSettings nether(Lnet/minecraft/data/worldgen/BootstrapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; # nether
#endgroup
public net.minecraft.world.level.levelgen.feature.featuresize.FeatureSizeType <init>(Lcom/mojang/serialization/MapCodec;)V # constructor
public net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType <init>(Lcom/mojang/serialization/MapCodec;)V # constructor
public net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacerType <init>(Lcom/mojang/serialization/MapCodec;)V # constructor
public net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProviderType <init>(Lcom/mojang/serialization/MapCodec;)V # constructor
public net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType <init>(Lcom/mojang/serialization/MapCodec;)V # constructor
public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType <init>(Lcom/mojang/serialization/MapCodec;)V # constructor
protected net.minecraft.world.level.portal.PortalForcer level # level
public net.minecraft.world.level.saveddata.maps.MapItemSavedData addDecoration(Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V
public net.minecraft.world.level.saveddata.maps.MapItemSavedData removeDecoration(Ljava/lang/String;)V
public net.minecraft.world.level.storage.LevelResource <init>(Ljava/lang/String;)V # constructor
private-f net.minecraft.world.level.storage.loot.LootPool rolls # rolls
private-f net.minecraft.world.level.storage.loot.LootPool bonusRolls # bonusRolls
public net.minecraft.server.network.ServerConfigurationPacketListenerImpl finishCurrentTask(Lnet/minecraft/server/network/ConfigurationTask$Type;)V
public com.mojang.blaze3d.vertex.VertexFormatElement$Usage$SetupState

# Below you will find particle constructor ATs
protected net.minecraft.client.particle.AttackSweepParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.BlockMarker <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/block/state/BlockState;)V # constructor
protected net.minecraft.client.particle.BreakingItemParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/world/item/ItemStack;)V # constructor
protected net.minecraft.client.particle.BubbleColumnUpParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.BubbleParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.BubblePopParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.CampfireSmokeParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDZ)V # constructor
protected net.minecraft.client.particle.CritParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.DragonBreathParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.DripParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V # constructor
protected net.minecraft.client.particle.EndRodParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.FallingDustParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDFFFLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.FireworkParticles$OverlayParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDD)V # constructor
protected net.minecraft.client.particle.FireworkParticles$SparkParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/ParticleEngine;Lnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.FlameParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.FlyStraightTowardsParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDII)V # constructor
protected net.minecraft.client.particle.FlyTowardsPositionParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.GlowParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.GustSeedParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDII)V # constructor
protected net.minecraft.client.particle.HeartParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDD)V # constructor
protected net.minecraft.client.particle.HugeExplosionSeedParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDD)V # constructor
protected net.minecraft.client.particle.LavaParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDD)V # constructor
protected net.minecraft.client.particle.MobAppearanceParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDD)V # constructor
protected net.minecraft.client.particle.NoteParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDD)V # constructor
protected net.minecraft.client.particle.PlayerCloudParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.ReversePortalParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.SculkChargeParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.SculkChargePopParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.ShriekParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDI)V # constructor
protected net.minecraft.client.particle.SoulParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.SpellParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.SpitParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.SplashParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.SquidInkParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDILnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.SuspendedParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/client/particle/SpriteSet;DDD)V # constructor
protected net.minecraft.client.particle.SuspendedTownParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # constructor
protected net.minecraft.client.particle.TotemParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.VibrationSignalParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/gameevent/PositionSource;I)V # constructor
protected net.minecraft.client.particle.WakeParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/client/particle/SpriteSet;)V # constructor
protected net.minecraft.client.particle.WaterCurrentDownParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDD)V # constructor
# End of particle constructor ATs group
# EnchantmentHelper methods needed for adding custom enchantments
public net.minecraft.world.item.enchantment.EnchantmentHelper runIterationOnItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;)V
public net.minecraft.world.item.enchantment.EnchantmentHelper runIterationOnItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentInSlotVisitor;)V
public net.minecraft.world.item.enchantment.EnchantmentHelper runIterationOnEquipment(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentInSlotVisitor;)V
public net.minecraft.world.item.enchantment.EnchantmentHelper getComponentType(Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/component/DataComponentType;
public net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentInSlotVisitor
public net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor

# Enchantment methods needed for adding custom enchantments
public net.minecraft.world.item.enchantment.Enchantment modifyItemFilteredCount(Lnet/minecraft/core/component/DataComponentType;Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/world/item/ItemStack;Lorg/apache/commons/lang3/mutable/MutableFloat;)V
public net.minecraft.world.item.enchantment.Enchantment modifyEntityFilteredValue(Lnet/minecraft/core/component/DataComponentType;Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;Lorg/apache/commons/lang3/mutable/MutableFloat;)V
public net.minecraft.world.item.enchantment.Enchantment modifyDamageFilteredValue(Lnet/minecraft/core/component/DataComponentType;Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lorg/apache/commons/lang3/mutable/MutableFloat;)V
public net.minecraft.world.item.enchantment.Enchantment itemContext(Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/storage/loot/LootContext;
public net.minecraft.world.item.enchantment.Enchantment locationContext(Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/world/level/storage/loot/LootContext;
public net.minecraft.world.item.enchantment.Enchantment entityContext(Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/storage/loot/LootContext;
public net.minecraft.world.item.enchantment.Enchantment blockHitContext(Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/storage/loot/LootContext;
public net.minecraft.world.item.enchantment.Enchantment applyEffects(Ljava/util/List;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V

# Magma
public net.minecraft.server.level.ChunkHolder playerProvider # playerProvider
public net.minecraft.server.level.ChunkMap entityMap # entityMap
public net.minecraft.server.level.ChunkMap serverViewDistance # serverViewDistance
public net.minecraft.server.level.ChunkMap visibleChunkMap # visibleChunkMap
public net.minecraft.server.level.DistanceManager simulationDistance # simulationDistance
public net.minecraft.server.level.DistanceManager tickets # tickets
public net.minecraft.server.level.ServerChunkCache distanceManager # distanceManager
public net.minecraft.server.level.ServerChunkCache spawnEnemies # spawnEnemies
public net.minecraft.server.level.ServerChunkCache spawnFriendlies # spawnFriendlies
public net.minecraft.server.level.ServerLevel serverLevelData # serverLevelData
public net.minecraft.server.level.Ticket key # key
public net.minecraft.server.players.PlayerList players # players
public net.minecraft.world.entity.animal.Cat setCollarColor(Lnet/minecraft/world/item/DyeColor;)V # setCollarColor
public net.minecraft.world.entity.decoration.HangingEntity setDirection(Lnet/minecraft/core/Direction;)V # setDirection
public net.minecraft.world.entity.item.ItemEntity pickupDelay # pickupDelay
public net.minecraft.world.entity.monster.SpellcasterIllager getCurrentSpell()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; # getCurrentSpell
public net.minecraft.world.entity.monster.SpellcasterIllager$IllagerSpell
public net.minecraft.world.entity.projectile.AbstractHurtingProjectile assignDirectionalMovement(Lnet/minecraft/world/phys/Vec3;D)V # assignDirectionalMovement
public net.minecraft.world.entity.raid.Raids raidMap # raidMap
public net.minecraft.world.inventory.AnvilMenu cost # cost
public net.minecraft.world.inventory.AnvilMenu itemName # itemName
public net.minecraft.world.item.trading.MerchantOffer demand # demand
public net.minecraft.world.item.trading.MerchantOffer result # result
public net.minecraft.world.item.trading.MerchantOffer specialPriceDiff # specialPriceDiff
public net.minecraft.world.item.trading.MerchantOffer uses # uses
public net.minecraft.world.level.GameRules$Value deserialize(Ljava/lang/String;)V # deserialize
public net.minecraft.world.level.GameRules$Value onChanged(Lnet/minecraft/server/MinecraftServer;)V # onChanged
public net.minecraft.world.level.Level levelData # levelData
public net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings palette # palette
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate entityInfoList # entityInfoList
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate palettes # palettes
public-f net.minecraft.world.item.trading.MerchantOffer baseCostA # baseCostA
public-f net.minecraft.world.item.trading.MerchantOffer costB # costB
public-f net.minecraft.world.item.trading.MerchantOffer maxUses # maxUses
public-f net.minecraft.world.item.trading.MerchantOffer priceMultiplier # priceMultiplier
public-f net.minecraft.world.item.trading.MerchantOffer rewardExp # rewardExp
public-f net.minecraft.world.item.trading.MerchantOffer xp # xp
public net.minecraft.server.players.PlayerList updateEntireScoreboard(Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V # updateEntireScoreboard
public net.minecraft.world.level.block.entity.BannerBlockEntity baseColor # baseColor
public net.minecraft.world.level.block.entity.BarrelBlockEntity openersCounter # openersCounter
public net.minecraft.world.level.block.entity.BarrelBlockEntity updateBlockState(Lnet/minecraft/world/level/block/state/BlockState;Z)V # updateBlockState
public net.minecraft.world.level.block.entity.BarrelBlockEntity playSound(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V # playSound
public net.minecraft.world.level.block.entity.BeehiveBlockEntity savedFlowerPos # savedFlowerPos
private-f net.minecraft.world.level.block.entity.BeehiveBlockEntity stored # stored
public net.minecraft.world.level.block.entity.BellBlockEntity resonating # resonating
public net.minecraft.world.level.biome.Biome getTemperature(Lnet/minecraft/core/BlockPos;)F # getTemperature
public net.minecraft.world.level.block.FireBlock igniteOdds # igniteOdds
public net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase destroySpeed # destroySpeed
public net.minecraft.world.level.block.entity.BrewingStandBlockEntity brewTime # brewTime
public net.minecraft.world.level.block.entity.BrewingStandBlockEntity fuel # fuel
public net.minecraft.world.level.block.entity.BrushableBlockEntity item # item
public net.minecraft.world.level.block.entity.BrushableBlockEntity lootTable # lootTable
public net.minecraft.world.level.block.entity.BrushableBlockEntity lootTableSeed # lootTableSeed
public net.minecraft.world.level.block.entity.CampfireBlockEntity cookingProgress # cookingProgress
public net.minecraft.world.level.block.entity.CampfireBlockEntity cookingTime # cookingTime
public net.minecraft.world.level.block.ChestBlock getMenuProvider(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; # getMenuProvider
public net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess levelDirectory # levelDirectory
public-f net.minecraft.world.level.LevelSettings levelName # levelName
public net.minecraft.world.entity.decoration.ItemFrame setDirection(Lnet/minecraft/core/Direction;)V # setDirection
public net.minecraft.nbt.ListTag
public-f net.minecraft.server.level.TicketType timeout # timeout
public net.minecraft.server.MinecraftServer resources # resources
public-f net.minecraft.server.players.PlayerList maxPlayers # maxPlayers
public-f net.minecraft.server.ReloadableServerResources commands # commands
public net.minecraft.server.dedicated.Settings properties # properties
public-f net.minecraft.server.dedicated.DedicatedServer settings # settings
public net.minecraft.server.MinecraftServer LOGGER # LOGGER
public net.minecraft.world.level.block.entity.LecternBlockEntity bookAccess # bookAccess
public net.minecraft.server.dedicated.DedicatedServerProperties$WorldDimensionData
public net.minecraft.server.Main forceUpgrade(Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/core/RegistryAccess;Z)V # forceUpgrade
public net.minecraft.server.MinecraftServer executor # executor
public net.minecraft.server.MinecraftServer progressListenerFactory # progressListenerFactory
public-f net.minecraft.server.MinecraftServer worldData # worldData
public-f net.minecraft.server.MinecraftServer levels # levels
public net.minecraft.server.level.ChunkMap progressListener # progressListener
public net.minecraft.server.level.ServerLevel entityManager # entityManager
public net.minecraft.server.MinecraftServer prepareLevels(Lnet/minecraft/server/level/progress/ChunkProgressListener;)V # prepareLevels
public net.minecraft.world.inventory.CraftingMenu craftSlots # craftSlots
public net.minecraft.world.inventory.CraftingMenu resultSlots # resultSlots
public net.minecraft.world.item.MapItem createNewSavedData(Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapId; # createNewSavedData
public net.minecraft.server.players.StoredUserEntry getUser()Ljava/lang/Object; # getUser
public net.minecraft.server.MinecraftServer storageSource # storageSource
public net.minecraft.server.MinecraftServer playerDataStorage # playerDataStorage
public net.minecraft.server.MinecraftServer serverThread # serverThread
public net.minecraft.world.entity.projectile.AbstractArrow inGround # inGround
public net.minecraft.world.entity.Entity getFireImmuneTicks()I # getFireImmuneTicks
public net.minecraft.world.entity.Entity hasVisualFire # hasVisualFire
public net.minecraft.world.entity.Entity passengers # passengers
public net.minecraft.server.level.ChunkMap$TrackedEntity
public net.minecraft.server.level.ChunkMap$TrackedEntity seenBy # seenBy
public net.minecraft.world.entity.Entity portalCooldown # portalCooldown
public net.minecraft.server.level.ChunkMap$TrackedEntity serverEntity # serverEntity
public net.minecraft.world.entity.player.Player getFireImmuneTicks()I # getFireImmuneTicks
public net.minecraft.world.entity.LivingEntity useItemRemaining # useItemRemaining
public net.minecraft.world.entity.LivingEntity DATA_ARROW_COUNT_ID # DATA_ARROW_COUNT_ID
public-f net.minecraft.world.entity.LivingEntity invulnerableDuration # invulnerableDuration
public net.minecraft.world.entity.LivingEntity lastHurt # lastHurt
public net.minecraft.world.entity.LivingEntity lastHurtByPlayer # lastHurtByPlayer
public net.minecraft.world.entity.LivingEntity activeEffects # activeEffects
public net.minecraft.world.entity.Entity getSharedFlag(I)Z # getSharedFlag
public net.minecraft.world.entity.Entity setSharedFlag(IZ)V # setSharedFlag
public net.minecraft.world.entity.player.Player sleepCounter # sleepCounter
public net.minecraft.server.level.ServerPlayer nextContainerCounter()V # nextContainerCounter
public net.minecraft.server.level.ServerPlayer initMenu(Lnet/minecraft/world/inventory/AbstractContainerMenu;)V # initMenu
public net.minecraft.world.entity.player.Player enchantmentSeed # enchantmentSeed
public net.minecraft.world.item.ItemCooldowns$CooldownInstance
public net.minecraft.world.item.ItemCooldowns cooldowns # cooldowns
public net.minecraft.world.item.ItemCooldowns$CooldownInstance endTime # endTime
public net.minecraft.world.item.ItemCooldowns tickCount # tickCount
public net.minecraft.world.entity.player.Player setShoulderEntityLeft(Lnet/minecraft/nbt/CompoundTag;)V # setShoulderEntityLeft
public net.minecraft.world.entity.player.Player setShoulderEntityRight(Lnet/minecraft/nbt/CompoundTag;)V # setShoulderEntityRight
public net.minecraft.world.food.FoodData exhaustionLevel # exhaustionLevel
public net.minecraft.world.food.FoodData saturationLevel # saturationLevel
public net.minecraft.world.food.FoodData foodLevel # foodLevel
public net.minecraft.world.level.block.ComposterBlock$EmptyContainer
public net.minecraft.world.level.block.ComposterBlock$InputContainer
public net.minecraft.world.level.block.ComposterBlock$OutputContainer
public-f net.minecraft.server.dedicated.DedicatedServer serverLinks # serverLinks
public net.minecraft.server.players.PlayerList playerIo # playerIo
public net.minecraft.server.level.ServerPlayer findRespawnAndUseSpawnBlock(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; # findRespawnAndUseSpawnBlock
public net.minecraft.stats.RecipeBook known # known
public net.minecraft.server.level.ServerPlayer lastSentExp # lastSentExp
public net.minecraft.server.level.ServerPlayer spawnInvulnerableTime # spawnInvulnerableTime
public net.minecraft.world.entity.player.Abilities flyingSpeed # flyingSpeed
public net.minecraft.world.entity.player.Abilities walkingSpeed # walkingSpeed
public net.minecraft.world.entity.LivingEntity DATA_HEALTH_ID # DATA_HEALTH_ID
public net.minecraft.server.level.ServerPlayer language # language
public net.minecraft.world.entity.projectile.FishingHook hookedIn # hookedIn
public net.minecraft.world.entity.projectile.FishingHook DATA_HOOKED_ENTITY # DATA_HOOKED_ENTITY
public net.minecraft.world.entity.projectile.FishingHook pullEntity(Lnet/minecraft/world/entity/Entity;)V # pullEntity
public net.minecraft.world.entity.projectile.FishingHook currentState # currentState
public net.minecraft.world.entity.projectile.FishingHook$FishHookState
public net.minecraft.world.level.block.entity.ConduitBlockEntity effectBlocks # effectBlocks
public net.minecraft.world.level.block.entity.ConduitBlockEntity destroyTarget # destroyTarget
public net.minecraft.world.level.block.entity.ConduitBlockEntity destroyTarget # destroyTarget
public net.minecraft.world.level.block.entity.ConduitBlockEntity destroyTargetUUID # destroyTargetUUID
public net.minecraft.world.level.block.entity.ConduitBlockEntity getDestroyRangeAABB(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; # getDestroyRangeAABB
public net.minecraft.world.level.BaseSpawner nextSpawnData # nextSpawnData
public net.minecraft.world.level.BaseSpawner spawnPotentials # spawnPotentials
public net.minecraft.world.level.BaseSpawner spawnDelay # spawnDelay
public net.minecraft.world.level.BaseSpawner minSpawnDelay # minSpawnDelay
public net.minecraft.world.level.BaseSpawner maxNearbyEntities # maxNearbyEntities
public net.minecraft.world.level.BaseSpawner spawnCount # spawnCount
public net.minecraft.world.level.BaseSpawner requiredPlayerRange # requiredPlayerRange
public net.minecraft.world.level.BaseSpawner spawnRange # spawnRange
public net.minecraft.world.level.BaseSpawner maxSpawnDelay # maxSpawnDelay
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData scale # scale
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData dimension # dimension
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData centerX # centerX
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData centerZ # centerZ
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData trackingPosition # trackingPosition
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData unlimitedTracking # unlimitedTracking
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData locked # locked
public-f net.minecraft.world.item.enchantment.ItemEnchantments$Mutable showInTooltip # showInTooltip
public net.minecraft.world.item.enchantment.ItemEnchantments showInTooltip # showInTooltip
public net.minecraft.world.level.saveddata.maps.MapItemSavedData setColorsDirty(II)V # setColorsDirty
public net.minecraft.world.level.GameRules$BooleanValue deserialize(Ljava/lang/String;)V # deserialize
public net.minecraft.world.level.GameRules$IntegerValue deserialize(Ljava/lang/String;)V # deserialize
public net.minecraft.world.scores.criteria.ObjectiveCriteria CRITERIA_CACHE # CRITERIA_CACHE
public net.minecraft.world.entity.Mob handDropChances # handDropChances
public net.minecraft.world.entity.Mob armorDropChances # armorDropChances
public net.minecraft.world.inventory.CraftingMenu access # access
public net.minecraft.world.level.chunk.LevelChunk level # level
public net.minecraft.world.level.entity.PersistentEntitySectionManager ensureChunkQueuedForLoad(J)V # ensureChunkQueuedForLoad
public net.minecraft.world.level.entity.PersistentEntitySectionManager permanentStorage # permanentStorage
public net.minecraft.world.level.chunk.ChunkAccess blockEntities # blockEntities
public net.minecraft.world.level.chunk.storage.ChunkSerializer BLOCK_STATE_CODEC # BLOCK_STATE_CODEC
public net.minecraft.world.level.chunk.ChunkAccess heightmaps # heightmaps
public net.minecraft.world.level.chunk.storage.EntityStorage entityDeserializerQueue # entityDeserializerQueue
public net.minecraft.world.level.block.SoundType breakSound # breakSound
public net.minecraft.world.level.block.SoundType hitSound # hitSound
public net.minecraft.world.level.levelgen.structure.StructurePiece SHAPE_CHECK_BLOCKS # SHAPE_CHECK_BLOCKS
public net.minecraft.world.level.StructureManager level # level
public net.minecraft.server.ServerAdvancementManager GSON # GSON
public net.minecraft.server.ServerAdvancementManager advancements # advancements
public net.minecraft.world.level.levelgen.structure.StructurePiece SHAPE_CHECK_BLOCKS # SHAPE_CHECK_BLOCKS
public net.minecraft.world.entity.LivingEntity effectsDirty # effectsDirty
public net.minecraft.world.entity.LivingEntity lastHurtByMob # lastHurtByMob
public-f net.minecraft.world.entity.LivingEntity combatTracker # combatTracker
public net.minecraft.world.entity.LivingEntity skipDropExperience # skipDropExperience
public net.minecraft.server.level.ChunkMap distanceManager # distanceManager
public net.minecraft.world.entity.Mob lootTable # lootTable
public net.minecraft.world.entity.Mob lootTableSeed # lootTableSeed
public net.minecraft.world.entity.monster.Vex limitedLifeTicks # limitedLifeTicks
public net.minecraft.world.entity.monster.Vex hasLimitedLife # hasLimitedLife
public net.minecraft.world.level.biome.Biome climateSettings # climateSettings
public net.minecraft.world.level.storage.PrimaryLevelData settings # settings
public-f net.minecraft.world.level.LevelSettings hardcore # hardcore
public net.minecraft.ChatFormatting code # code
public net.minecraft.nbt.TagParser readArrayTag()Lnet/minecraft/nbt/Tag; # readArrayTag
public net.minecraft.nbt.TagParser type(Ljava/lang/String;)Lnet/minecraft/nbt/Tag; # type
public net.minecraft.world.entity.boss.enderdragon.EnderDragon subEntities # subEntities
public net.minecraft.world.entity.vehicle.AbstractMinecartContainer lootTable # lootTable
public net.minecraft.world.entity.vehicle.AbstractMinecartContainer lootTableSeed # lootTableSeed
public net.minecraft.world.entity.monster.piglin.AbstractPiglin isImmuneToZombification()Z # isImmuneToZombification
public net.minecraft.world.entity.monster.piglin.AbstractPiglin timeInOverworld # timeInOverworld
public net.minecraft.world.entity.vehicle.MinecartFurnace fuel # fuel
public net.minecraft.world.entity.projectile.EyeOfEnder tx # tx
public net.minecraft.world.entity.projectile.EyeOfEnder ty # ty
public net.minecraft.world.entity.projectile.EyeOfEnder tz # tz
public net.minecraft.world.entity.projectile.EyeOfEnder life # life
public net.minecraft.world.entity.projectile.EyeOfEnder surviveAfterDeath # surviveAfterDeath
public net.minecraft.world.entity.animal.Animal loveCause # loveCause
public net.minecraft.world.entity.animal.Animal inLove # inLove
public net.minecraft.world.entity.animal.horse.AbstractHorse inventory # inventory
public net.minecraft.world.entity.animal.horse.AbstractHorse createInventory()V # createInventory
public net.minecraft.world.entity.animal.horse.SkeletonHorse trapTime # trapTime
public net.minecraft.world.entity.npc.Villager releaseAllPois()V # releaseAllPois
public net.minecraft.world.entity.npc.Villager setUnhappy()V # setUnhappy
public net.minecraft.world.entity.Display createTransformation(Lnet/minecraft/network/syncher/SynchedEntityData;)Lcom/mojang/math/Transformation; # createTransformation
public net.minecraft.world.entity.Display setTransformation(Lcom/mojang/math/Transformation;)V # setTransformation
public net.minecraft.world.entity.Display getTransformationInterpolationDuration()I # getTransformationInterpolationDuration
public net.minecraft.world.entity.Display setTransformationInterpolationDuration(I)V # setTransformationInterpolationDuration
public net.minecraft.world.entity.Display DATA_POS_ROT_INTERPOLATION_DURATION_ID # DATA_POS_ROT_INTERPOLATION_DURATION_ID
public net.minecraft.world.entity.Display getViewRange()F # getViewRange
public net.minecraft.world.entity.Display setViewRange(F)V # setViewRange
public net.minecraft.world.entity.Display getShadowRadius()F # getShadowRadius
public net.minecraft.world.entity.Display setShadowRadius(F)V # setShadowRadius
public net.minecraft.world.entity.Display getShadowStrength()F # getShadowStrength
public net.minecraft.world.entity.Display setShadowStrength(F)V # setShadowStrength
public net.minecraft.world.entity.Display getWidth()F # getWidth
public net.minecraft.world.entity.Display setWidth(F)V # setWidth
public net.minecraft.world.entity.Display getHeight()F # getHeight
public net.minecraft.world.entity.Display setHeight(F)V # setHeight
public net.minecraft.world.entity.Display getBillboardConstraints()Lnet/minecraft/world/entity/Display$BillboardConstraints; # getBillboardConstraints
public net.minecraft.world.entity.Display getTransformationInterpolationDelay()I # getTransformationInterpolationDelay
public net.minecraft.world.entity.Display setTransformationInterpolationDelay(I)V # setTransformationInterpolationDelay
public net.minecraft.world.entity.Display setBillboardConstraints(Lnet/minecraft/world/entity/Display$BillboardConstraints;)V # setBillboardConstraints
public net.minecraft.world.entity.Display getGlowColorOverride()I # getGlowColorOverride
public net.minecraft.world.entity.Display setGlowColorOverride(I)V # setGlowColorOverride
public net.minecraft.world.entity.Display getBrightnessOverride()Lnet/minecraft/util/Brightness; # getBrightnessOverride
public net.minecraft.world.entity.Display setBrightnessOverride(Lnet/minecraft/util/Brightness;)V # setBrightnessOverride
public net.minecraft.world.entity.Display$TextDisplay getText()Lnet/minecraft/network/chat/Component; # getText
public net.minecraft.world.entity.Display$TextDisplay setText(Lnet/minecraft/network/chat/Component;)V # setText
public net.minecraft.world.entity.Display$TextDisplay getLineWidth()I # getLineWidth
public net.minecraft.world.entity.Display$TextDisplay DATA_LINE_WIDTH_ID # DATA_LINE_WIDTH_ID
public net.minecraft.world.entity.Display$TextDisplay getBackgroundColor()I # getBackgroundColor
public net.minecraft.world.entity.Display$TextDisplay DATA_BACKGROUND_COLOR_ID # DATA_BACKGROUND_COLOR_ID
public net.minecraft.world.entity.Display$TextDisplay getTextOpacity()B # getTextOpacity
public net.minecraft.world.entity.Display$TextDisplay setTextOpacity(B)V # setTextOpacity
public net.minecraft.world.entity.Display$TextDisplay getFlags()B # getFlags
public net.minecraft.world.entity.Display$TextDisplay setFlags(B)V # setFlags
public net.minecraft.world.entity.vehicle.Boat status # status
public net.minecraft.world.entity.monster.hoglin.Hoglin isImmuneToZombification()Z # isImmuneToZombification
public net.minecraft.world.entity.monster.hoglin.Hoglin cannotBeHunted # cannotBeHunted
public net.minecraft.world.entity.monster.hoglin.Hoglin timeInOverworld # timeInOverworld
public net.minecraft.world.entity.animal.allay.Allay canDuplicate()Z # canDuplicate
public net.minecraft.world.entity.animal.allay.Allay duplicationCooldown # duplicationCooldown
public net.minecraft.world.entity.animal.allay.Allay resetDuplicationCooldown()V # resetDuplicationCooldown
public net.minecraft.world.entity.animal.allay.Allay jukeboxPos # jukeboxPos
public net.minecraft.world.entity.animal.allay.Allay duplicateAllay()V # duplicateAllay
public net.minecraft.world.entity.projectile.AbstractArrow setPierceLevel(B)V # setPierceLevel
public net.minecraft.world.entity.projectile.AbstractArrow life # life
public net.minecraft.world.entity.projectile.AbstractArrow pickupItemStack # pickupItemStack
public net.minecraft.world.entity.projectile.AbstractArrow firedFromWeapon # firedFromWeapon
public net.minecraft.world.entity.projectile.Arrow updateColor()V # updateColor
public net.minecraft.world.entity.projectile.Arrow getPotionContents()Lnet/minecraft/world/item/alchemy/PotionContents; # getPotionContents
public net.minecraft.world.entity.projectile.Arrow setPotionContents(Lnet/minecraft/world/item/alchemy/PotionContents;)V # setPotionContents
public net.minecraft.world.entity.LightningBolt visualOnly # visualOnly
public net.minecraft.world.entity.LightningBolt flashes # flashes
public net.minecraft.world.entity.LightningBolt life # life
public net.minecraft.world.entity.animal.sniffer.Sniffer getExploredPositions()Ljava/util/stream/Stream; # getExploredPositions
public net.minecraft.world.entity.animal.sniffer.Sniffer storeExploredPosition(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; # storeExploredPosition
public net.minecraft.world.entity.animal.sniffer.Sniffer getState()Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; # getState
public net.minecraft.world.entity.animal.sniffer.Sniffer calculateDigPosition()Ljava/util/Optional; # calculateDigPosition
public net.minecraft.world.entity.animal.sniffer.Sniffer canDig()Z # canDig
public net.minecraft.world.entity.projectile.FireworkRocketEntity DATA_ID_FIREWORKS_ITEM # DATA_ID_FIREWORKS_ITEM
public net.minecraft.world.entity.projectile.FireworkRocketEntity lifetime # lifetime
public net.minecraft.world.entity.projectile.FireworkRocketEntity attachedToEntity # attachedToEntity
public net.minecraft.world.entity.projectile.FireworkRocketEntity life # life
public net.minecraft.world.entity.projectile.FireworkRocketEntity DATA_SHOT_AT_ANGLE # DATA_SHOT_AT_ANGLE
public net.minecraft.world.entity.monster.Zombie conversionTime # conversionTime
public net.minecraft.world.entity.monster.Zombie DATA_DROWNED_CONVERSION_ID # DATA_DROWNED_CONVERSION_ID
public net.minecraft.world.entity.monster.Zombie startUnderWaterConversion(I)V # startUnderWaterConversion
public net.minecraft.world.entity.projectile.EvokerFangs warmupDelayTicks # warmupDelayTicks
public net.minecraft.world.entity.Display$ItemDisplay getItemStack()Lnet/minecraft/world/item/ItemStack; # getItemStack
public net.minecraft.world.entity.Display$ItemDisplay getItemTransform()Lnet/minecraft/world/item/ItemDisplayContext; # getItemTransform
public net.minecraft.world.entity.Display$ItemDisplay setItemTransform(Lnet/minecraft/world/item/ItemDisplayContext;)V # setItemTransform
public net.minecraft.world.entity.monster.Shulker DATA_COLOR_ID # DATA_COLOR_ID
public net.minecraft.world.entity.monster.Shulker getRawPeekAmount()I # getRawPeekAmount
public net.minecraft.world.entity.monster.Shulker setRawPeekAmount(I)V # setRawPeekAmount
public net.minecraft.world.entity.monster.Shulker setAttachFace(Lnet/minecraft/core/Direction;)V # setAttachFace
public net.minecraft.world.entity.Display$BlockDisplay getBlockState()Lnet/minecraft/world/level/block/state/BlockState; # getBlockState
public net.minecraft.world.entity.Display$BlockDisplay setBlockState(Lnet/minecraft/world/level/block/state/BlockState;)V # setBlockState
public net.minecraft.world.entity.vehicle.MinecartCommandBlock DATA_ID_COMMAND_NAME # DATA_ID_COMMAND_NAME
public net.minecraft.world.entity.monster.piglin.Piglin cannotHunt # cannotHunt
public net.minecraft.world.entity.monster.piglin.Piglin inventory # inventory
public net.minecraft.world.entity.item.FallingBlockEntity cancelDrop # cancelDrop
public net.minecraft.world.entity.item.FallingBlockEntity hurtEntities # hurtEntities
public net.minecraft.world.entity.item.FallingBlockEntity fallDamagePerDistance # fallDamagePerDistance
public net.minecraft.world.entity.item.FallingBlockEntity fallDamageMax # fallDamageMax
public net.minecraft.world.entity.monster.EnderMan teleport()Z # teleport
public net.minecraft.world.entity.monster.EnderMan teleportTowards(Lnet/minecraft/world/entity/Entity;)Z # teleportTowards
public net.minecraft.world.entity.monster.Vindicator isJohnny # isJohnny
public net.minecraft.world.entity.animal.frog.Tadpole age # age
public net.minecraft.world.entity.animal.MushroomCow stewEffects # stewEffects
public-f net.minecraft.world.item.ItemStack item # item
public net.minecraft.world.entity.Display$ItemDisplay setItemStack(Lnet/minecraft/world/item/ItemStack;)V # setItemStack
public net.minecraft.world.entity.monster.Creeper maxSwell # maxSwell
public net.minecraft.world.entity.monster.Creeper swell # swell
public net.minecraft.world.entity.monster.Creeper explosionRadius # explosionRadius
public net.minecraft.world.entity.monster.Creeper explodeCreeper()V # explodeCreeper
public net.minecraft.world.entity.monster.Pillager inventory # inventory
public net.minecraft.world.entity.projectile.windcharge.AbstractWindCharge explode(Lnet/minecraft/world/phys/Vec3;)V # explode
public net.minecraft.world.entity.GlowSquid setDarkTicks(I)V # setDarkTicks
public net.minecraft.world.entity.item.PrimedTnt owner # owner
public net.minecraft.world.entity.decoration.ItemFrame DATA_ITEM # DATA_ITEM
public net.minecraft.world.entity.decoration.ItemFrame DATA_ROTATION # DATA_ROTATION
public net.minecraft.world.entity.decoration.ItemFrame dropChance # dropChance
public net.minecraft.world.entity.decoration.ItemFrame fixed # fixed
public net.minecraft.world.entity.projectile.windcharge.BreezeWindCharge explode(Lnet/minecraft/world/phys/Vec3;)V # explode
public net.minecraft.world.entity.projectile.windcharge.WindCharge explode(Lnet/minecraft/world/phys/Vec3;)V # explode
public net.minecraft.world.entity.monster.Skeleton conversionTime # conversionTime
public net.minecraft.world.entity.monster.Skeleton DATA_STRAY_CONVERSION_ID # DATA_STRAY_CONVERSION_ID
public net.minecraft.world.entity.monster.Skeleton startFreezeConversion(I)V # startFreezeConversion
public net.minecraft.world.entity.animal.Bee hivePos # hivePos
public net.minecraft.world.entity.animal.Bee setHasNectar(Z)V # setHasNectar
public net.minecraft.world.entity.animal.Bee setHasStung(Z)V # setHasStung
public net.minecraft.world.entity.animal.Bee stayOutOfHiveCountdown # stayOutOfHiveCountdown
public net.minecraft.world.entity.vehicle.MinecartTNT fuse # fuse
public net.minecraft.world.entity.vehicle.MinecartTNT explode(D)V # explode
public net.minecraft.world.entity.AreaEffectCloud waitTime # waitTime
public net.minecraft.world.entity.AreaEffectCloud reapplicationDelay # reapplicationDelay
public net.minecraft.world.entity.AreaEffectCloud durationOnUse # durationOnUse
public net.minecraft.world.entity.AreaEffectCloud radiusOnUse # radiusOnUse
public net.minecraft.world.entity.AreaEffectCloud radiusPerTick # radiusPerTick
public net.minecraft.world.entity.AreaEffectCloud potionContents # potionContents
public net.minecraft.world.entity.AreaEffectCloud updateColor()V # updateColor
public net.minecraft.world.entity.animal.Ocelot isTrusting()Z # isTrusting
public net.minecraft.world.entity.animal.Ocelot setTrusting(Z)V # setTrusting
public net.minecraft.world.entity.animal.horse.Horse setVariantAndMarkings(Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V # setVariantAndMarkings
public net.minecraft.world.entity.monster.ZombieVillager villagerConversionTime # villagerConversionTime
public net.minecraft.world.entity.monster.ZombieVillager DATA_CONVERTING_ID # DATA_CONVERTING_ID
public net.minecraft.world.entity.monster.ZombieVillager conversionStarter # conversionStarter
public net.minecraft.world.entity.monster.ZombieVillager startConverting(Ljava/util/UUID;I)V # startConverting
public net.minecraft.world.entity.boss.wither.WitherBoss bossEvent # bossEvent
public net.minecraft.world.entity.animal.Fox setSleeping(Z)V # setSleeping
public net.minecraft.world.entity.animal.Fox DATA_TRUSTED_ID_0 # DATA_TRUSTED_ID_0
public net.minecraft.world.entity.animal.Fox DATA_TRUSTED_ID_1 # DATA_TRUSTED_ID_1
public net.minecraft.world.entity.monster.Guardian setActiveAttackTarget(I)V # setActiveAttackTarget
public net.minecraft.world.entity.monster.Guardian$GuardianAttackGoal
public net.minecraft.world.entity.monster.Guardian$GuardianAttackGoal attackTime # attackTime
public net.minecraft.world.entity.monster.Strider steering # steering
public net.minecraft.world.entity.ItemBasedSteering boosting # boosting
public net.minecraft.world.entity.ItemBasedSteering boostTimeTotal()I # boostTimeTotal
public net.minecraft.world.entity.ItemBasedSteering boostTime # boostTime
public net.minecraft.world.entity.item.ItemEntity age # age
public net.minecraft.world.entity.item.ItemEntity target # target
public net.minecraft.world.entity.item.ItemEntity thrower # thrower
public net.minecraft.world.entity.projectile.LargeFireball explosionPower # explosionPower
public net.minecraft.world.entity.animal.goat.Goat DATA_HAS_LEFT_HORN # DATA_HAS_LEFT_HORN
public net.minecraft.world.entity.animal.goat.Goat DATA_HAS_RIGHT_HORN # DATA_HAS_RIGHT_HORN
public net.minecraft.world.entity.decoration.ArmorStand bodyPose # bodyPose
public net.minecraft.world.entity.decoration.ArmorStand leftArmPose # leftArmPose
public net.minecraft.world.entity.decoration.ArmorStand rightArmPose # rightArmPose
public net.minecraft.world.entity.decoration.ArmorStand leftLegPose # leftLegPose
public net.minecraft.world.entity.decoration.ArmorStand rightLegPose # rightLegPose
public net.minecraft.world.entity.decoration.ArmorStand headPose # headPose
public net.minecraft.world.entity.decoration.ArmorStand setSmall(Z)V # setSmall
public net.minecraft.world.entity.decoration.ArmorStand setMarker(Z)V # setMarker
public net.minecraft.world.entity.decoration.ArmorStand disabledSlots # disabledSlots
public net.minecraft.world.entity.animal.Wolf setCollarColor(Lnet/minecraft/world/item/DyeColor;)V # setCollarColor
public net.minecraft.world.entity.animal.Pig steering # steering
public net.minecraft.world.entity.animal.TropicalFish getPackedVariant()I # getPackedVariant
public net.minecraft.world.entity.animal.TropicalFish setPackedVariant(I)V # setPackedVariant
public net.minecraft.world.entity.Interaction getWidth()F # getWidth
public net.minecraft.world.entity.Interaction setWidth(F)V # setWidth
public net.minecraft.world.entity.Interaction getHeight()F # getHeight
public net.minecraft.world.entity.Interaction setHeight(F)V # setHeight
public net.minecraft.world.entity.Interaction getResponse()Z # getResponse
public net.minecraft.world.entity.Interaction setResponse(Z)V # setResponse
public net.minecraft.world.entity.Interaction$PlayerAction
public net.minecraft.world.entity.Interaction attack # attack
public net.minecraft.world.entity.Interaction$PlayerAction player # player
public net.minecraft.world.entity.Interaction$PlayerAction timestamp # timestamp
public net.minecraft.world.entity.Interaction interaction # interaction
public net.minecraft.world.entity.OminousItemSpawner setItem(Lnet/minecraft/world/item/ItemStack;)V # setItem
public net.minecraft.world.entity.OminousItemSpawner spawnItemAfterTicks # spawnItemAfterTicks
public net.minecraft.world.entity.projectile.SpectralArrow duration # duration
public net.minecraft.world.level.dimension.end.EndDragonFight level # level
public net.minecraft.world.level.dimension.end.EndDragonFight dragonUUID # dragonUUID
public net.minecraft.world.level.dimension.end.EndDragonFight dragonEvent # dragonEvent
public net.minecraft.world.level.dimension.end.EndDragonFight portalLocation # portalLocation
public net.minecraft.world.level.dimension.end.EndDragonFight findExitPortal()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; # findExitPortal
public net.minecraft.world.level.dimension.end.EndDragonFight spawnExitPortal(Z)V # spawnExitPortal
public net.minecraft.world.level.dimension.end.EndDragonFight previouslyKilled # previouslyKilled
public net.minecraft.world.level.dimension.end.EndDragonFight respawnDragon(Ljava/util/List;)V # respawnDragon
public net.minecraft.world.level.dimension.end.EndDragonFight respawnStage # respawnStage
public net.minecraft.world.level.dimension.end.EndDragonFight setRespawnStage(Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V # setRespawnStage
public net.minecraft.world.BossEvent name # name
public net.minecraft.server.level.ServerBossEvent broadcast(Ljava/util/function/Function;)V # broadcast
public net.minecraft.world.BossEvent color # color
public net.minecraft.world.BossEvent overlay # overlay
public net.minecraft.server.level.ServerBossEvent visible # visible
public net.minecraft.world.level.storage.PlayerDataStorage load(Lnet/minecraft/world/entity/player/Player;Ljava/lang/String;)Ljava/util/Optional; # load
public net.minecraft.world.entity.raid.Raid ticksActive # ticksActive
public net.minecraft.world.entity.raid.Raid raidOmenLevel # raidOmenLevel
public net.minecraft.world.entity.raid.Raid numGroups # numGroups
public net.minecraft.world.entity.raid.Raid heroesOfTheVillage # heroesOfTheVillage
public net.minecraft.server.packs.repository.Pack resources # resources
public net.minecraft.world.level.chunk.ChunkGenerator generationSettingsGetter # generationSettingsGetter
public net.minecraft.world.level.saveddata.maps.MapItemSavedData decorations # decorations
public net.minecraft.world.item.armortrim.ArmorTrim showInTooltip # showInTooltip
public net.minecraft.world.item.crafting.Ingredient itemStacks # itemStacks
public net.minecraft.world.level.block.entity.BaseContainerBlockEntity name # name
public-f net.minecraft.world.inventory.AbstractContainerMenu lastSlots # lastSlots
public-f net.minecraft.world.inventory.AbstractContainerMenu slots # slots
public-f net.minecraft.world.inventory.AbstractContainerMenu remoteSlots # remoteSlots
public net.minecraft.world.CompoundContainer container1 # container1
public net.minecraft.world.CompoundContainer container2 # container2
public net.minecraft.world.item.crafting.RecipeManager byType # byType
public net.minecraft.world.inventory.MerchantContainer selectionHint # selectionHint
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager structureRepository # structureRepository
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager loadFromGenerated(Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; # loadFromGenerated
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager loadFromResource(Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; # loadFromResource
public net.minecraft.world.level.Explosion source # source
public net.minecraft.world.flag.FeatureFlag universe # universe
public net.minecraft.world.flag.FeatureFlagRegistry names # names
public net.minecraft.world.level.block.entity.BaseContainerBlockEntity name # name
public net.minecraft.world.level.block.entity.BaseContainerBlockEntity lockKey # lockKey
public net.minecraft.world.level.block.entity.ChestBlockEntity openersCounter # openersCounter
public net.minecraft.world.level.block.entity.EnderChestBlockEntity openersCounter # openersCounter
public net.minecraft.world.level.block.entity.BarrelBlockEntity openersCounter # openersCounter
public net.minecraft.world.level.block.entity.TrialSpawnerBlockEntity trialSpawner # trialSpawner
public-f net.minecraft.world.level.block.entity.trialspawner.TrialSpawner targetCooldownLength # targetCooldownLength
public-f net.minecraft.world.level.block.entity.trialspawner.TrialSpawner requiredPlayerRange # requiredPlayerRange
public net.minecraft.world.level.block.entity.trialspawner.TrialSpawnerData detectedPlayers # detectedPlayers
public net.minecraft.world.level.block.entity.trialspawner.TrialSpawnerData currentMobs # currentMobs
public net.minecraft.world.level.block.entity.trialspawner.TrialSpawner isOminous # isOminous
public-f net.minecraft.world.level.block.entity.trialspawner.TrialSpawner normalConfig # normalConfig
public-f net.minecraft.world.level.block.entity.trialspawner.TrialSpawner ominousConfig # ominousConfig
public net.minecraft.world.item.crafting.Ingredient <init>(Ljava/util/stream/Stream;)V # <init>
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager readStructure(Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; # readStructure
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity litTime # litTime
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity cookingProgress # cookingProgress
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity cookingTotalTime # cookingTotalTime
public net.minecraft.world.level.block.state.StateHolder PROPERTY_ENTRY_TO_STRING_FUNCTION # PROPERTY_ENTRY_TO_STRING_FUNCTION
public net.minecraft.world.level.block.state.properties.IntegerProperty min # min
public net.minecraft.world.level.block.state.properties.IntegerProperty max # max
public net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity lootTable # lootTable
public net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity lootTableSeed # lootTableSeed
public net.minecraft.world.level.block.ShulkerBoxBlock color # color
public net.minecraft.world.level.block.DispenserBlock dispenseFrom(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V # dispenseFrom
public net.minecraft.world.level.block.entity.ChiseledBookShelfBlockEntity lastInteractedSlot # lastInteractedSlot
public net.minecraft.world.level.block.ChiseledBookShelfBlock getSection(F)I # getSection
public net.minecraft.world.level.block.entity.SculkSensorBlockEntity lastVibrationFrequency # lastVibrationFrequency
public net.minecraft.world.level.block.entity.SculkCatalystBlockEntity$CatalystListener bloom(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V # bloom
public net.minecraft.world.level.block.entity.StructureBlockEntity author # author
public net.minecraft.world.level.block.entity.StructureBlockEntity structurePos # structurePos
public net.minecraft.world.level.block.entity.StructureBlockEntity structureSize # structureSize
public net.minecraft.world.level.block.entity.StructureBlockEntity mirror # mirror
public net.minecraft.world.level.block.entity.StructureBlockEntity rotation # rotation
public net.minecraft.world.level.block.entity.StructureBlockEntity mode # mode
public net.minecraft.world.level.block.entity.StructureBlockEntity ignoreEntities # ignoreEntities
public net.minecraft.world.level.block.entity.StructureBlockEntity showAir # showAir
public net.minecraft.world.level.block.entity.StructureBlockEntity showBoundingBox # showBoundingBox
public net.minecraft.world.level.block.entity.StructureBlockEntity integrity # integrity
public net.minecraft.world.level.block.entity.StructureBlockEntity seed # seed
public net.minecraft.world.level.block.entity.StructureBlockEntity metaData # metaData
public net.minecraft.world.level.block.entity.DecoratedPotBlockEntity decorations # decorations
public net.minecraft.world.level.block.entity.trialspawner.TrialSpawnerData nextSpawnData # nextSpawnData
public net.minecraft.world.level.block.entity.BeaconBlockEntity levels # levels
public net.minecraft.world.level.block.entity.BeaconBlockEntity primaryPower # primaryPower
public net.minecraft.world.level.block.entity.BeaconBlockEntity name # name
public net.minecraft.world.level.block.entity.BeaconBlockEntity lockKey # lockKey
public net.minecraft.world.level.block.entity.BeaconBlockEntity secondaryPower # secondaryPower
public net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity exitPortal # exitPortal
public net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity exactTeleport # exactTeleport
public net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity age # age
public net.minecraft.world.level.block.entity.CrafterBlockEntity craftingTicksRemaining # craftingTicksRemaining
public net.minecraft.world.level.block.entity.SculkShriekerBlockEntity warningLevel # warningLevel
public net.minecraft.world.level.block.entity.LecternBlockEntity setPage(I)V # setPage
public net.minecraft.world.level.block.entity.SkullBlockEntity noteBlockSound # noteBlockSound
public net.minecraft.world.level.block.DropperBlock dispenseFrom(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V # dispenseFrom
public net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator settings # settings
public net.minecraft.server.network.ServerLoginPacketListenerImpl connection # connection
