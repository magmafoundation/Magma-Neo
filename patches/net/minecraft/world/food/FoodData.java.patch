--- a/net/minecraft/world/food/FoodData.java
+++ b/net/minecraft/world/food/FoodData.java
@@ -12,6 +_,20 @@
     public float exhaustionLevel;
     private int tickTimer;
     private int lastFoodLevel = 20;
+    // CraftBukkit start
+    private Player entityhuman;
+    public int saturatedRegenRate = 10;
+    public int unsaturatedRegenRate = 80;
+    public int starvationRate = 80;
+    // CraftBukkit end
+
+    // CraftBukkit start - added EntityHuman constructor
+    public FoodData(Player entityhuman) {
+        org.apache.commons.lang3.Validate.notNull(entityhuman);
+        this.entityhuman = entityhuman;
+        this.saturationLevel = 5.0F;
+    }
+    // CraftBukkit end
 
     public FoodData() {
         this.saturationLevel = 5.0F;
@@ -30,6 +_,20 @@
         this.add(p_347533_.nutrition(), p_347533_.saturation());
     }
 
+    // CraftBukkit start
+    public void eat(net.minecraft.world.item.ItemStack itemstack, FoodProperties foodinfo) {
+        int oldFoodLevel = foodLevel;
+
+        org.bukkit.event.entity.FoodLevelChangeEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callFoodLevelChangeEvent(entityhuman, foodinfo.nutrition() + oldFoodLevel, itemstack);
+
+        if (!event.isCancelled()) {
+            this.add(event.getFoodLevel() - oldFoodLevel, foodinfo.saturation());
+        }
+
+        ((net.minecraft.server.level.ServerPlayer) entityhuman).getBukkitEntity().sendHealthUpdate();
+    }
+    // CraftBukkit end
+
     public void tick(Player p_38711_) {
         Difficulty difficulty = p_38711_.level().getDifficulty();
         this.lastFoodLevel = this.foodLevel;
@@ -38,29 +_,37 @@
             if (this.saturationLevel > 0.0F) {
                 this.saturationLevel = Math.max(this.saturationLevel - 1.0F, 0.0F);
             } else if (difficulty != Difficulty.PEACEFUL) {
-                this.foodLevel = Math.max(this.foodLevel - 1, 0);
+                // CraftBukkit start
+                org.bukkit.event.entity.FoodLevelChangeEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callFoodLevelChangeEvent(entityhuman, Math.max(this.foodLevel - 1, 0));
+
+                if (!event.isCancelled()) {
+                    this.foodLevel = event.getFoodLevel();
+                }
+
+                ((net.minecraft.server.level.ServerPlayer) entityhuman).connection.send(new net.minecraft.network.protocol.game.ClientboundSetHealthPacket(((net.minecraft.server.level.ServerPlayer) entityhuman).getBukkitEntity().getScaledHealth(), this.foodLevel, this.saturationLevel));
+                // CraftBukkit end
             }
         }
 
         boolean flag = p_38711_.level().getGameRules().getBoolean(GameRules.RULE_NATURAL_REGENERATION);
         if (flag && this.saturationLevel > 0.0F && p_38711_.isHurt() && this.foodLevel >= 20) {
             this.tickTimer++;
-            if (this.tickTimer >= 10) {
+            if (this.tickTimer >= this.saturatedRegenRate) { // CraftBukkit
                 float f = Math.min(this.saturationLevel, 6.0F);
-                p_38711_.heal(f / 6.0F);
-                this.addExhaustion(f);
+                entityhuman.heal(f / 6.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.SATIATED); // CraftBukkit - added RegainReason
+                entityhuman.causeFoodExhaustion(f, org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN); // CraftBukkit - EntityExhaustionEvent
                 this.tickTimer = 0;
             }
         } else if (flag && this.foodLevel >= 18 && p_38711_.isHurt()) {
             this.tickTimer++;
-            if (this.tickTimer >= 80) {
-                p_38711_.heal(1.0F);
-                this.addExhaustion(6.0F);
+            if (this.tickTimer >= this.unsaturatedRegenRate) { // CraftBukkit - add regen rate manipulation
+                entityhuman.heal(1.0F, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.SATIATED); // CraftBukkit - added RegainReason
+                entityhuman.causeFoodExhaustion(6.0f, org.bukkit.event.entity.EntityExhaustionEvent.ExhaustionReason.REGEN); // CraftBukkit - EntityExhaustionEvent
                 this.tickTimer = 0;
             }
         } else if (this.foodLevel <= 0) {
             this.tickTimer++;
-            if (this.tickTimer >= 80) {
+            if (this.tickTimer >= this.starvationRate) { // CraftBukkit - add regen rate manipulation
                 if (p_38711_.getHealth() > 10.0F || difficulty == Difficulty.HARD || p_38711_.getHealth() > 1.0F && difficulty == Difficulty.NORMAL) {
                     p_38711_.hurt(p_38711_.damageSources().starve(), 1.0F);
                 }
