--- a/net/minecraft/world/entity/monster/Slime.java
+++ b/net/minecraft/world/entity/monster/Slime.java
@@ -139,6 +_,8 @@
             float f = this.getDimensions(this.getPose()).width() * 2.0F;
             float f1 = f / 2.0F;
 
+            // Forge: Don't spawn particles if it's handled by the implementation itself
+            if (!spawnCustomParticles())
             for (int i = 0; (float)i < f * 16.0F; i++) {
                 float f2 = this.random.nextFloat() * (float) (Math.PI * 2);
                 float f3 = this.random.nextFloat() * 0.5F + 0.5F;
@@ -195,6 +_,13 @@
 
     @Override
     public void remove(Entity.RemovalReason p_149847_) {
+        // CraftBukkit start - add Bukkit remove cause
+        this.remove(p_149847_, null);
+    }
+
+    @Override
+    public void remove(Entity.RemovalReason p_149847_, org.bukkit.event.entity.EntityRemoveEvent.Cause cause) {
+        // CraftBukkit end
         int i = this.getSize();
         if (!this.level().isClientSide && i > 1 && this.isDeadOrDying()) {
             Component component = this.getCustomName();
@@ -204,6 +_,21 @@
             int j = i / 2;
             int k = 2 + this.random.nextInt(3);
 
+            // CraftBukkit start
+            org.bukkit.event.entity.SlimeSplitEvent event = new org.bukkit.event.entity.SlimeSplitEvent((org.bukkit.entity.Slime) this.getBukkitEntity(), k);
+            this.level().getCraftServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled() && event.getCount() > 0) {
+                k = event.getCount();
+            } else {
+                super.remove(p_149847_, cause); // CraftBukkit - add Bukkit remove cause
+                return;
+            }
+            var slimes = new java.util.ArrayList<net.minecraft.world.entity.LivingEntity>(j);
+            // CraftBukkit end
+
+            var children = new java.util.ArrayList<Mob>(); // Neo: Children list for MobSplitEvent.
+
             for (int l = 0; l < k; l++) {
                 float f2 = ((float)(l % 2) - 0.5F) * f1;
                 float f3 = ((float)(l / 2) - 0.5F) * f1;
@@ -218,12 +_,24 @@
                     slime.setInvulnerable(this.isInvulnerable());
                     slime.setSize(j, true);
                     slime.moveTo(this.getX() + (double)f2, this.getY() + 0.5, this.getZ() + (double)f3, this.random.nextFloat() * 360.0F, 0.0F);
-                    this.level().addFreshEntity(slime);
+
+                    children.add(slime); // Neo: Record the slime until after event firing.
+                    slimes.add(slime); // CraftBukkit
                 }
             }
+
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTransformEvent(this, slimes, org.bukkit.event.entity.EntityTransformEvent.TransformReason.SPLIT).isCancelled()) {
+                super.remove(p_149847_, cause); // CraftBukkit - add Bukkit remove cause
+                return;
+            }
+            // CraftBukkit end
+            if (!net.neoforged.neoforge.event.EventHooks.onMobSplit(this, children).isCanceled()) {
+                children.forEach(this.level()::addFreshEntity);
+            }
         }
 
-        super.remove(p_149847_);
+        super.remove(p_149847_, cause);
     }
 
     @Override
@@ -334,6 +_,7 @@
         Vec3 vec3 = this.getDeltaMovement();
         this.setDeltaMovement(vec3.x, (double)this.getJumpPower(), vec3.z);
         this.hasImpulse = true;
+        net.neoforged.neoforge.common.CommonHooks.onLivingJump(this);
     }
 
     @Nullable
@@ -363,6 +_,12 @@
     public EntityDimensions getDefaultDimensions(Pose p_316359_) {
         return super.getDefaultDimensions(p_316359_).scale((float)this.getSize());
     }
+
+    /**
+     * Called when the slime spawns particles on landing, see onUpdate.
+     * Return true to prevent the spawning of the default particles.
+     */
+    protected boolean spawnCustomParticles() { return false; }
 
     static class SlimeAttackGoal extends Goal {
         private final Slime slime;
