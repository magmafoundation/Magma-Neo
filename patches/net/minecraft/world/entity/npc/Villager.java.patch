--- a/net/minecraft/world/entity/npc/Villager.java
+++ b/net/minecraft/world/entity/npc/Villager.java
@@ -285,7 +_,7 @@
                     this.increaseProfessionLevelOnUpdate = false;
                 }
 
-                this.addEffect(new MobEffectInstance(MobEffects.REGENERATION, 200, 0));
+                this.addEffect(new MobEffectInstance(MobEffects.REGENERATION, 200, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.VILLAGER_TRADE); // CraftBukkit
             }
         }
 
@@ -322,7 +_,7 @@
     @Override
     public InteractionResult mobInteract(Player p_35472_, InteractionHand p_35473_) {
         ItemStack itemstack = p_35472_.getItemInHand(p_35473_);
-        if (itemstack.is(Items.VILLAGER_SPAWN_EGG) || !this.isAlive() || this.isTrading() || this.isSleeping()) {
+        if (itemstack.is(Items.VILLAGER_SPAWN_EGG) || !this.isAlive() || this.isTrading() || this.isSleeping() || p_35472_.isSecondaryUseActive()) {
             return super.mobInteract(p_35472_, p_35473_);
         } else if (this.isBaby()) {
             this.setUnhappy();
@@ -399,7 +_,13 @@
         this.updateDemand();
 
         for (MerchantOffer merchantoffer : this.getOffers()) {
-            merchantoffer.resetUses();
+            // CraftBukkit start
+            org.bukkit.event.entity.VillagerReplenishTradeEvent event = new org.bukkit.event.entity.VillagerReplenishTradeEvent((org.bukkit.entity.Villager) this.getBukkitEntity(), merchantoffer.asBukkit());
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (!event.isCancelled()) {
+                merchantoffer.resetUses();
+            }
+            // CraftBukkit end
         }
 
         this.resendOffersToTradingPlayer();
@@ -460,7 +_,13 @@
         int i = 2 - this.numberOfRestocksToday;
         if (i > 0) {
             for (MerchantOffer merchantoffer : this.getOffers()) {
-                merchantoffer.resetUses();
+                // CraftBukkit start
+                org.bukkit.event.entity.VillagerReplenishTradeEvent event = new org.bukkit.event.entity.VillagerReplenishTradeEvent((org.bukkit.entity.Villager) this.getBukkitEntity(), merchantoffer.asBukkit());
+                org.bukkit.Bukkit.getPluginManager().callEvent(event);
+                if (!event.isCancelled()) {
+                    merchantoffer.resetUses();
+                }
+                // CraftBukkit end
             }
         }
 
@@ -742,8 +_,9 @@
 
     @Override
     protected Component getTypeName() {
+        net.minecraft.resources.ResourceLocation profName = BuiltInRegistries.VILLAGER_PROFESSION.getKey(this.getVillagerData().getProfession());
         return Component.translatable(
-            this.getType().getDescriptionId() + "." + BuiltInRegistries.VILLAGER_PROFESSION.getKey(this.getVillagerData().getProfession()).getPath()
+            this.getType().getDescriptionId() + '.' + (!"minecraft".equals(profName.getNamespace()) ? profName.getNamespace() + '.' : "") + profName.getPath()
         );
     }
 
@@ -799,7 +_,7 @@
 
     @Override
     public void thunderHit(ServerLevel p_35409_, LightningBolt p_35410_) {
-        if (p_35409_.getDifficulty() != Difficulty.PEACEFUL) {
+        if (p_35409_.getDifficulty() != Difficulty.PEACEFUL && net.neoforged.neoforge.event.EventHooks.canLivingConvert(this, EntityType.WITCH, (timer) -> {})) {
             LOGGER.info("Villager {} was struck by lightning {}.", this, p_35410_);
             Witch witch = EntityType.WITCH.create(p_35409_);
             if (witch != null) {
@@ -812,7 +_,13 @@
                 }
 
                 witch.setPersistenceRequired();
-                p_35409_.addFreshEntityWithPassengers(witch);
+                net.neoforged.neoforge.event.EventHooks.onLivingConvert(this, witch);
+                // CraftBukkit start
+                if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTransformEvent(this, witch, org.bukkit.event.entity.EntityTransformEvent.TransformReason.LIGHTNING).isCancelled()) {
+                    return;
+                }
+                p_35409_.addFreshEntityWithPassengers(witch, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.LIGHTNING);
+                // CraftBukkit end
                 this.releaseAllPois();
                 this.discard();
             } else {
@@ -831,7 +_,10 @@
     @Override
     public boolean wantsToPickUp(ItemStack p_35543_) {
         Item item = p_35543_.getItem();
-        return (WANTED_ITEMS.contains(item) || this.getVillagerData().getProfession().requestedItems().contains(item))
+        // Neo: Patched so that Farmer Villagers will pick up SpecialPlantable items. Also fixes MC-274244 by making "minecraft:villager_plantable_seeds" tagged items also be picked up by Farmer Villagers to be planted later.
+        boolean isFarmerDesiredSeed = (p_35543_.is(ItemTags.VILLAGER_PLANTABLE_SEEDS) || (p_35543_.getItem() instanceof net.neoforged.neoforge.common.SpecialPlantable specialPlantable && specialPlantable.villagerCanPlantItem(this)))
+                && this.getVillagerData().getProfession().secondaryPoi().stream().anyMatch(secondaryPoi -> secondaryPoi.defaultBlockState().is(net.neoforged.neoforge.common.Tags.Blocks.VILLAGER_FARMLANDS));
+        return (WANTED_ITEMS.contains(item) || this.getVillagerData().getProfession().requestedItems().contains(item) || isFarmerDesiredSeed)
             && this.getInventory().canAddItem(p_35543_);
     }
 
@@ -899,7 +_,7 @@
             List<Villager> list1 = list.stream().filter(p_186293_ -> p_186293_.wantsToSpawnGolem(p_35399_)).limit(5L).collect(Collectors.toList());
             if (list1.size() >= p_35400_) {
                 if (!SpawnUtil.trySpawnMob(
-                        EntityType.IRON_GOLEM, MobSpawnType.MOB_SUMMONED, p_35398_, this.blockPosition(), 10, 8, 6, SpawnUtil.Strategy.LEGACY_IRON_GOLEM
+                        EntityType.IRON_GOLEM, MobSpawnType.MOB_SUMMONED, p_35398_, this.blockPosition(), 10, 8, 6, SpawnUtil.Strategy.LEGACY_IRON_GOLEM, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.VILLAGE_DEFENSE
                     )
                     .isEmpty()) {
                     list.forEach(GolemSensor::golemDetected);
