--- a/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -145,6 +_,51 @@
         public boolean stillValid(Player p_324170_) {
             return p_324170_.getVehicle() == AbstractHorse.this || p_324170_.canInteractWithEntity(AbstractHorse.this, 4.0);
         }
+
+        // CraftBukkit start - add fields and methods
+        public java.util.List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<org.bukkit.entity.HumanEntity>();
+        private int maxStack = MAX_STACK;
+
+        @Override
+        public java.util.List<net.minecraft.world.item.ItemStack> getContents() {
+            return java.util.Arrays.asList(this.getTheItem());
+        }
+
+        @Override
+        public void onOpen(org.bukkit.craftbukkit.entity.CraftHumanEntity who) {
+            transaction.add(who);
+        }
+
+        @Override
+        public void onClose(org.bukkit.craftbukkit.entity.CraftHumanEntity who) {
+            transaction.remove(who);
+        }
+
+        @Override
+        public java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+            return transaction;
+        }
+
+        @Override
+        public int getMaxStackSize() {
+            return maxStack;
+        }
+
+        @Override
+        public void setMaxStackSize(int size) {
+            maxStack = size;
+        }
+
+        @Override
+        public org.bukkit.inventory.InventoryHolder getOwner() {
+            return (org.bukkit.entity.AbstractHorse) AbstractHorse.this.getBukkitEntity();
+        }
+
+        @Override
+        public org.bukkit.Location getLocation() {
+            return AbstractHorse.this.getBukkitEntity().getLocation();
+        }
+        // CraftBukkit end
     };
 
     protected AbstractHorse(EntityType<? extends AbstractHorse> p_30531_, Level p_30532_) {
@@ -396,9 +_,9 @@
     protected void playStepSound(BlockPos p_30584_, BlockState p_30585_) {
         if (!p_30585_.liquid()) {
             BlockState blockstate = this.level().getBlockState(p_30584_.above());
-            SoundType soundtype = p_30585_.getSoundType();
+            SoundType soundtype = p_30585_.getSoundType(level(), p_30584_, this);
             if (blockstate.is(Blocks.SNOW)) {
-                soundtype = blockstate.getSoundType();
+                soundtype = blockstate.getSoundType(level(), p_30584_, this);
             }
 
             if (this.isVehicle() && this.canGallop) {
@@ -816,6 +_,7 @@
         this.setDeltaMovement(vec3.x, d0, vec3.z);
         this.setIsJumping(true);
         this.hasImpulse = true;
+        net.neoforged.neoforge.common.CommonHooks.onLivingJump(this);
         if (p_275435_.z > 0.0) {
             float f = Mth.sin(this.getYRot() * (float) (Math.PI / 180.0));
             float f1 = Mth.cos(this.getYRot() * (float) (Math.PI / 180.0));
@@ -1118,6 +_,11 @@
 
         this.randomizeAttributes(p_30555_.getRandom());
         return super.finalizeSpawn(p_30555_, p_30556_, p_30557_, p_30558_);
+    }
+
+    // Neo: Inventory getter
+    public net.minecraft.world.Container getInventory() {
+        return this.inventory;
     }
 
     public boolean hasInventoryChanged(Container p_149512_) {
