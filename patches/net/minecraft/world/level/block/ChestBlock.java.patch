--- a/net/minecraft/world/level/block/ChestBlock.java
+++ b/net/minecraft/world/level/block/ChestBlock.java
@@ -79,29 +_,8 @@
     };
     private static final DoubleBlockCombiner.Combiner<ChestBlockEntity, Optional<MenuProvider>> MENU_PROVIDER_COMBINER = new DoubleBlockCombiner.Combiner<ChestBlockEntity, Optional<MenuProvider>>() {
         public Optional<MenuProvider> acceptDouble(final ChestBlockEntity p_51604_, final ChestBlockEntity p_51605_) {
-            final Container container = new CompoundContainer(p_51604_, p_51605_);
-            return Optional.of(new MenuProvider() {
-                @Nullable
-                @Override
-                public AbstractContainerMenu createMenu(int p_51622_, Inventory p_51623_, Player p_51624_) {
-                    if (p_51604_.canOpen(p_51624_) && p_51605_.canOpen(p_51624_)) {
-                        p_51604_.unpackLootTable(p_51623_.player);
-                        p_51605_.unpackLootTable(p_51623_.player);
-                        return ChestMenu.sixRows(p_51622_, p_51623_, container);
-                    } else {
-                        return null;
-                    }
-                }
-
-                @Override
-                public Component getDisplayName() {
-                    if (p_51604_.hasCustomName()) {
-                        return p_51604_.getDisplayName();
-                    } else {
-                        return (Component)(p_51605_.hasCustomName() ? p_51605_.getDisplayName() : Component.translatable("container.chestDouble"));
-                    }
-                }
-            });
+            final CompoundContainer container = new CompoundContainer(p_51604_, p_51605_);
+            return Optional.of(new DoubleInventory(p_51604_, p_51605_, container)); // CraftBukkit // CraftBukkit - decompile error
         }
 
         public Optional<MenuProvider> acceptSingle(ChestBlockEntity p_51602_) {
@@ -113,6 +_,38 @@
         }
     };
 
+    // CraftBukkit start
+    public static class DoubleInventory implements MenuProvider {
+
+        private final ChestBlockEntity tileentitychest;
+        private final ChestBlockEntity tileentitychest1;
+        public final CompoundContainer inventorylargechest;
+
+        public DoubleInventory(ChestBlockEntity tileentitychest, ChestBlockEntity tileentitychest1, CompoundContainer inventorylargechest) {
+            this.tileentitychest = tileentitychest;
+            this.tileentitychest1 = tileentitychest1;
+            this.inventorylargechest = inventorylargechest;
+        }
+
+        @Nullable
+        @Override
+        public AbstractContainerMenu createMenu(int i, Inventory playerinventory, Player entityhuman) {
+            if (tileentitychest.canOpen(entityhuman) && tileentitychest1.canOpen(entityhuman)) {
+                tileentitychest.unpackLootTable(playerinventory.player);
+                tileentitychest1.unpackLootTable(playerinventory.player);
+                return ChestMenu.sixRows(i, playerinventory, inventorylargechest);
+            } else {
+                return null;
+            }
+        }
+
+        @Override
+        public Component getDisplayName() {
+            return (Component) (tileentitychest.hasCustomName() ? tileentitychest.getDisplayName() : (tileentitychest1.hasCustomName() ? tileentitychest1.getDisplayName() : Component.translatable("container.chestDouble")));
+        }
+    };
+    // CraftBukkit end
+
     @Override
     public MapCodec<? extends ChestBlock> codec() {
         return CODEC;
@@ -277,8 +_,15 @@
 
     @Nullable
     @Override
-    public MenuProvider getMenuProvider(BlockState p_51574_, Level p_51575_, BlockPos p_51576_) {
-        return this.combine(p_51574_, p_51575_, p_51576_, false).apply(MENU_PROVIDER_COMBINER).orElse(null);
+    protected MenuProvider getMenuProvider(BlockState p_51574_, Level p_51575_, BlockPos p_51576_) {
+        // CraftBukkit start
+        return getMenuProvider(p_51574_, p_51575_, p_51576_, false);
+    }
+
+    @Nullable
+    public MenuProvider getMenuProvider(BlockState p_51574_, Level p_51575_, BlockPos p_51576_, boolean ignoreObstructions) {
+        return (MenuProvider) ((Optional) this.combine(p_51574_, p_51575_, p_51576_, ignoreObstructions).apply(ChestBlock.MENU_PROVIDER_COMBINER)).orElse((Object) null);
+        // CraftBukkit end
     }
 
     public static DoubleBlockCombiner.Combiner<ChestBlockEntity, Float2FloatFunction> opennessCombiner(final LidBlockEntity p_51518_) {
@@ -357,7 +_,8 @@
 
     @Override
     protected BlockState mirror(BlockState p_51549_, Mirror p_51550_) {
-        return p_51549_.rotate(p_51550_.getRotation(p_51549_.getValue(FACING)));
+        BlockState rotated = p_51549_.rotate(p_51550_.getRotation(p_51549_.getValue(FACING)));
+        return p_51550_ == Mirror.NONE ? rotated : rotated.setValue(TYPE, rotated.getValue(TYPE).getOpposite());  // Forge: Fixed MC-134110 Structure mirroring breaking apart double chests
     }
 
     @Override
