--- a/net/minecraft/world/inventory/EnchantmentMenu.java
+++ b/net/minecraft/world/inventory/EnchantmentMenu.java
@@ -39,6 +_,13 @@
             super.setChanged();
             EnchantmentMenu.this.slotsChanged(this);
         }
+
+        // CraftBukkit start
+        @Override
+        public org.bukkit.Location getLocation() {
+            return enchantSlots.getLocation();
+        }
+        // CraftBukkit end
     };
     private final ContainerLevelAccess access;
     private final RandomSource random = RandomSource.create();
@@ -46,6 +_,10 @@
     public final int[] costs = new int[3];
     public final int[] enchantClue = new int[]{-1, -1, -1};
     public final int[] levelClue = new int[]{-1, -1, -1};
+    // CraftBukkit start
+    private org.bukkit.craftbukkit.inventory.CraftInventoryView bukkitEntity = null;
+    private org.bukkit.entity.Player player;
+    // CraftBukkit end
 
     public EnchantmentMenu(int p_39454_, Inventory p_39455_) {
         this(p_39454_, p_39455_, ContainerLevelAccess.NULL);
@@ -63,7 +_,7 @@
         this.addSlot(new Slot(this.enchantSlots, 1, 35, 47) {
             @Override
             public boolean mayPlace(ItemStack p_39517_) {
-                return p_39517_.is(Items.LAPIS_LAZULI);
+                return p_39517_.is(Items.LAPIS_LAZULI); // Neo: TODO - replace with the tag once we have client tags
             }
 
             @Override
@@ -92,32 +_,36 @@
         this.addDataSlot(DataSlot.shared(this.levelClue, 0));
         this.addDataSlot(DataSlot.shared(this.levelClue, 1));
         this.addDataSlot(DataSlot.shared(this.levelClue, 2));
+        // CraftBukkit start
+        player = (org.bukkit.entity.Player) p_39458_.player.getBukkitEntity();
+        // CraftBukkit end
     }
 
     @Override
     public void slotsChanged(Container p_39461_) {
         if (p_39461_ == this.enchantSlots) {
             ItemStack itemstack = p_39461_.getItem(0);
-            if (!itemstack.isEmpty() && itemstack.isEnchantable()) {
+            if (!itemstack.isEmpty()) { // CraftBukkit - relax condition
                 this.access.execute((p_344366_, p_344367_) -> {
                     IdMap<Holder<Enchantment>> idmap = p_344366_.registryAccess().registryOrThrow(Registries.ENCHANTMENT).asHolderIdMap();
-                    int j = 0;
+                    float j = 0;
 
                     for (BlockPos blockpos : EnchantingTableBlock.BOOKSHELF_OFFSETS) {
                         if (EnchantingTableBlock.isValidBookShelf(p_344366_, p_344367_, blockpos)) {
-                            j++;
+                            j += p_344366_.getBlockState(p_344367_.offset(blockpos)).getEnchantPowerBonus(p_344366_, p_344367_.offset(blockpos));
                         }
                     }
 
                     this.random.setSeed((long)this.enchantmentSeed.get());
 
                     for (int k = 0; k < 3; k++) {
-                        this.costs[k] = EnchantmentHelper.getEnchantmentCost(this.random, k, j, itemstack);
+                        this.costs[k] = EnchantmentHelper.getEnchantmentCost(this.random, k, (int)j, itemstack);
                         this.enchantClue[k] = -1;
                         this.levelClue[k] = -1;
                         if (this.costs[k] < k + 1) {
                             this.costs[k] = 0;
                         }
+                        this.costs[k] = net.neoforged.neoforge.event.EventHooks.onEnchantmentLevelSet(p_344366_, p_344367_, k, (int)j, itemstack, costs[k]);
                     }
 
                     for (int l = 0; l < 3; l++) {
@@ -131,6 +_,41 @@
                         }
                     }
 
+                    // CraftBukkit start
+                    org.bukkit.craftbukkit.inventory.CraftItemStack item = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack);
+                    org.bukkit.enchantments.EnchantmentOffer[] offers = new org.bukkit.enchantments.EnchantmentOffer[3];
+                    for (int f = 0; f < 3; ++f) {
+                        org.bukkit.enchantments.Enchantment enchantment = (this.enchantClue[f] >= 0) ? org.bukkit.craftbukkit.enchantments.CraftEnchantment.minecraftHolderToBukkit(idmap.byId(this.enchantClue[f])) : null;
+                        offers[f] = (enchantment != null) ? new org.bukkit.enchantments.EnchantmentOffer(enchantment, this.levelClue[f], this.costs[f]) : null;
+                    }
+
+                    org.bukkit.event.enchantment.PrepareItemEnchantEvent event = new org.bukkit.event.enchantment.PrepareItemEnchantEvent(player, this.getBukkitView(), access.getLocation().getBlock(), item, offers, (int)j);
+                    event.setCancelled(!itemstack.isEnchantable());
+                    p_344366_.getCraftServer().getPluginManager().callEvent(event);
+
+                    if (event.isCancelled()) {
+                        for (int k = 0; k < 3; ++k) {
+                            this.costs[k] = 0;
+                            this.enchantClue[k] = -1;
+                            this.levelClue[k] = -1;
+                        }
+                        return;
+                    }
+
+                    for (int k = 0; k < 3; k++) {
+                        org.bukkit.enchantments.EnchantmentOffer offer = event.getOffers()[k];
+                        if (offer != null) {
+                            this.costs[k] = offer.getCost();
+                            this.enchantClue[k] = idmap.getId(org.bukkit.craftbukkit.enchantments.CraftEnchantment.bukkitToMinecraftHolder(offer.getEnchantment()));
+                            this.levelClue[k] = offer.getEnchantmentLevel();
+                        } else {
+                            this.costs[k] = 0;
+                            this.enchantClue[k] = -1;
+                            this.levelClue[k] = -1;
+                        }
+                    }
+                    // CraftBukkit end
+
                     this.broadcastChanges();
                 });
             } else {
@@ -161,16 +_,27 @@
                         (p_347276_, p_347277_) -> {
                             ItemStack itemstack2 = itemstack;
                             List<EnchantmentInstance> list = this.getEnchantmentList(p_347276_.registryAccess(), itemstack, p_39466_, this.costs[p_39466_]);
-                            if (!list.isEmpty()) {
-                                p_39465_.onEnchantmentPerformed(itemstack, i);
-                                if (itemstack.is(Items.BOOK)) {
-                                    itemstack2 = itemstack.transmuteCopy(Items.ENCHANTED_BOOK);
-                                    this.enchantSlots.setItem(0, itemstack2);
-                                }
-
-                                for (EnchantmentInstance enchantmentinstance : list) {
-                                    itemstack2.enchant(enchantmentinstance.enchantment, enchantmentinstance.level);
-                                }
+                            // CraftBukkit start
+                            net.minecraft.core.Registry<net.minecraft.core.Holder<net.minecraft.world.item.enchantment.Enchantment>> registry = (net.minecraft.core.Registry<net.minecraft.core.Holder<net.minecraft.world.item.enchantment.Enchantment>>) p_347276_.registryAccess().registryOrThrow(net.minecraft.core.registries.Registries.ENCHANTMENT).asHolderIdMap();
+                            if (true || !list.isEmpty()) {
+                                java.util.Map<org.bukkit.enchantments.Enchantment, Integer> enchants = new java.util.HashMap<org.bukkit.enchantments.Enchantment, Integer>();
+                                for (EnchantmentInstance instance : list) {
+                                    enchants.put(org.bukkit.craftbukkit.enchantments.CraftEnchantment.minecraftHolderToBukkit(instance.enchantment), instance.level);
+                                }
+                                org.bukkit.craftbukkit.inventory.CraftItemStack item = org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack2);
+                                org.bukkit.enchantments.Enchantment hintedEnchantment = org.bukkit.craftbukkit.enchantments.CraftEnchantment.minecraftHolderToBukkit(registry.byId(enchantClue[i]));
+                                int hintedEnchantmentLevel = levelClue[i];
+                                org.bukkit.event.enchantment.EnchantItemEvent event = new org.bukkit.event.enchantment.EnchantItemEvent((org.bukkit.entity.Player) p_39465_.getBukkitEntity(), this.getBukkitView(), access.getLocation().getBlock(), item, this.costs[i], enchants, hintedEnchantment, hintedEnchantmentLevel, i);
+                                p_347276_.getCraftServer().getPluginManager().callEvent(event);
+                                int level = event.getExpLevelCost();
+                                if (event.isCancelled() || (level > p_39465_.experienceLevel && !p_39465_.getAbilities().instabuild) || event.getEnchantsToAdd().isEmpty()) {
+                                    return;
+                                }
+                                // CraftBukkit end
+                                // Neo: Allow items to transform themselves when enchanted, instead of relying on hardcoded transformations for Items.BOOK
+                                itemstack2 = itemstack.getItem().applyEnchantments(itemstack, list);
+                                this.enchantSlots.setItem(0, itemstack2);
+                                net.neoforged.neoforge.common.CommonHooks.onPlayerEnchantItem(p_39465_, itemstack2, list);
 
                                 itemstack1.consume(i, p_39465_);
                                 if (itemstack1.isEmpty()) {
@@ -231,6 +_,7 @@
 
     @Override
     public boolean stillValid(Player p_39463_) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return stillValid(this.access, p_39463_, Blocks.ENCHANTING_TABLE);
     }
 
@@ -249,7 +_,7 @@
                 if (!this.moveItemStackTo(itemstack1, 2, 38, true)) {
                     return ItemStack.EMPTY;
                 }
-            } else if (itemstack1.is(Items.LAPIS_LAZULI)) {
+            } else if (itemstack1.is(Items.LAPIS_LAZULI)) { // Neo: TODO - replace with the tag once we have client tags
                 if (!this.moveItemStackTo(itemstack1, 1, 2, true)) {
                     return ItemStack.EMPTY;
                 }
@@ -278,4 +_,17 @@
 
         return itemstack;
     }
+
+    // CraftBukkit start
+    @Override
+    public org.bukkit.craftbukkit.inventory.CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventoryEnchanting inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryEnchanting(this.enchantSlots);
+        bukkitEntity = new org.bukkit.craftbukkit.inventory.CraftInventoryView(this.player, inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
