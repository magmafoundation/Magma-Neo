--- a/net/minecraft/world/inventory/AnvilMenu.java
+++ b/net/minecraft/world/inventory/AnvilMenu.java
@@ -44,6 +_,11 @@
     private static final int ADDITIONAL_SLOT_X_PLACEMENT = 76;
     private static final int RESULT_SLOT_X_PLACEMENT = 134;
     private static final int SLOT_Y_PLACEMENT = 47;
+    // CraftBukkit start
+    public static final int DEFAULT_DENIED_COST = -1;
+    public int maximumRepairCost = 40;
+    private org.bukkit.craftbukkit.inventory.CraftInventoryView bukkitEntity;
+    // CraftBukkit end
 
     public AnvilMenu(int p_39005_, Inventory p_39006_) {
         this(p_39005_, p_39006_, ContainerLevelAccess.NULL);
@@ -79,6 +_,8 @@
             p_150474_.giveExperienceLevels(-this.cost.get());
         }
 
+        float breakChance = net.neoforged.neoforge.common.CommonHooks.onAnvilRepair(p_150474_, p_150475_, AnvilMenu.this.inputSlots.getItem(0), AnvilMenu.this.inputSlots.getItem(1));
+
         this.inputSlots.setItem(0, ItemStack.EMPTY);
         if (this.repairItemCountCost > 0) {
             ItemStack itemstack = this.inputSlots.getItem(1);
@@ -95,7 +_,7 @@
         this.cost.set(0);
         this.access.execute((p_150479_, p_150480_) -> {
             BlockState blockstate = p_150479_.getBlockState(p_150480_);
-            if (!p_150474_.hasInfiniteMaterials() && blockstate.is(BlockTags.ANVIL) && p_150474_.getRandom().nextFloat() < 0.12F) {
+            if (!p_150474_.getAbilities().instabuild && blockstate.is(BlockTags.ANVIL) && p_150474_.getRandom().nextFloat() < breakChance) {
                 BlockState blockstate1 = AnvilBlock.damage(blockstate);
                 if (blockstate1 == null) {
                     p_150479_.removeBlock(p_150480_, false);
@@ -124,8 +_,10 @@
             j += (long)itemstack.getOrDefault(DataComponents.REPAIR_COST, Integer.valueOf(0)).intValue()
                 + (long)itemstack2.getOrDefault(DataComponents.REPAIR_COST, Integer.valueOf(0)).intValue();
             this.repairItemCountCost = 0;
+            boolean flag = false;
+            if (!net.neoforged.neoforge.common.CommonHooks.onAnvilChange(this, itemstack, itemstack2, resultSlots, itemName, j, this.player)) return;
             if (!itemstack2.isEmpty()) {
-                boolean flag = itemstack2.has(DataComponents.STORED_ENCHANTMENTS);
+                flag = itemstack2.has(DataComponents.STORED_ENCHANTMENTS);
                 if (itemstack1.isDamageableItem() && itemstack1.getItem().isValidRepairItem(itemstack, itemstack2)) {
                     int l2 = Math.min(itemstack1.getDamageValue(), itemstack1.getMaxDamage() / 4);
                     if (l2 <= 0) {
@@ -228,6 +_,7 @@
                 i += k;
                 itemstack1.remove(DataComponents.CUSTOM_NAME);
             }
+            if (flag && !itemstack1.isBookEnchantable(itemstack2)) itemstack1 = ItemStack.EMPTY;
 
             int k2 = (int)Mth.clamp(j + (long)i, 0L, 2147483647L);
             this.cost.set(k2);
@@ -298,4 +_,25 @@
     public int getCost() {
         return this.cost.get();
     }
+
+    /**
+     * Neo: Sets the cost. Will be clamped to an integer.
+     */
+    public void setMaximumCost(long value) {
+        this.cost.set((int)Mth.clamp(value, 0L, Integer.MAX_VALUE));
+    }
+
+    // CraftBukkit start
+    @Override
+    public org.bukkit.craftbukkit.inventory.CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventory inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryAnvil(
+                access.getLocation(), this.inputSlots, this.resultSlots, this);
+        bukkitEntity = new org.bukkit.craftbukkit.inventory.CraftInventoryView(this.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
